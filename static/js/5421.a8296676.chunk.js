"use strict";(globalThis.webpackChunkgeowebmap=globalThis.webpackChunkgeowebmap||[]).push([[5421],{15421:(e,t,i)=>{i.r(t),i.d(t,{default:()=>y});var r=i(27366),s=i(40110),a=i(32718),l=i(92026),n=i(8537),o=i(49861),h=(i(63780),i(93169),i(25243),i(69912)),d=i(37933),p=i(42069),c=i(77385),u=i(67581),f=i(13107);const g=a.Z.getLogger("esri.views.3d.layers.WMTSLayerView3d");let m=class extends((0,f.y)((0,c.r)((0,p.A)(u.Z)))){constructor(){super(...arguments),this.type="wmts-3d"}get hasMixedImageFormats(){return!0}_getCompatibleTileInfoMatrixSet(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=(0,d.mt)(this.layer);if((0,l.pC)(i)){if(s.Z.isCollection(i)){return i.find((i=>{const r=e(i);return(0,l.pC)(r)&&(t?g.error("The selected tile matrix set is not compatible with the view",r):this.addResolvingPromise(Promise.reject(r))),null==r}))}const r=e(i);return(0,l.pC)(r)&&(t?g.error("The selected tile matrix set is not compatible with the view",r):this.addResolvingPromise(Promise.reject(r))),i}return null}initialize(){this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)));const e=(0,n.LR)(this.view,"basemapTerrain.tilingSchemeLocked").then((()=>{const e=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)||this._getTileInfoCompatibilityError(e.tileInfo,this.view.basemapTerrain.tilingScheme)));(0,l.Wi)(e)||(this.layer.activeLayer.tileMatrixSetId!==e.id&&(this.layer.activeLayer.tileMatrixSetId=e.id),this.tileInfo=e.tileInfo,this.layer.fullExtent=e.fullExtent)}));this.addResolvingPromise(e),this.when((()=>this._initialized()))}refresh(){this.emit("data-changed")}canResume(){if(!super.canResume())return!1;const e=this.layer.activeLayer.tileMatrixSet;return e&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async doRefresh(){this.suspended||this.emit("data-changed")}_initialized(){this.updatingHandles.add((()=>{var e,t;return null==(e=this.layer)||null==(t=e.activeLayer)?void 0:t.styleId}),(()=>this.refresh())),this.updatingHandles.add((()=>{var e;return null==(e=this.layer)?void 0:e.activeLayer}),(e=>{const t=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)||this._getTileInfoCompatibilityError(e.tileInfo,this.view.basemapTerrain.tilingScheme)),!0);(0,l.pC)(t)&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()}))}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};(0,r._)([(0,o.Cb)({readOnly:!0})],m.prototype,"hasMixedImageFormats",null),(0,r._)([(0,o.Cb)()],m.prototype,"layer",void 0),(0,r._)([(0,o.Cb)()],m.prototype,"suspended",void 0),m=(0,r._)([(0,h.j)("esri.views.3d.layers.WMTSLayerView3D")],m);const y=m},13107:(e,t,i)=>{i.d(t,{y:()=>h});var r=i(27366),s=i(32718),a=i(66978),l=i(94172),n=i(49861),o=(i(63780),i(93169),i(25243),i(69912));const h=e=>{let t=class extends e{initialize(){this.handles.add((0,l.on)((()=>this.layer),"refresh",(e=>{this.doRefresh(e.dataChanged).catch((e=>{(0,a.D_)(e)||s.Z.getLogger(this.declaredClass).error(e)}))})),"RefreshableLayerView")}};return(0,r._)([(0,n.Cb)()],t.prototype,"layer",void 0),t=(0,r._)([(0,o.j)("esri.layers.mixins.RefreshableLayerView")],t),t}}}]);
//# sourceMappingURL=5421.a8296676.chunk.js.map