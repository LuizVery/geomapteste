{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","sas/i18n/resources.ts","sas/ArcGISWebMapProvider/ProviderUtil.ts","sas/ArcGISWebMapProvider/AnimationHelper.ts","sas/ArcGISWebMapProvider/Error.ts","sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder.ts","sas/ArcGISWebMapProvider/SmartLegendHelper.ts","sas/ArcGISWebMapProvider/layerBuilder/BubbleLayerBuilder.ts","sas/ArcGISWebMapProvider/layerBuilder/ChoroplethLayerBuilder.ts","sas/ArcGISWebMapProvider/layerBuilder/FilteredLayerBuilder.ts","sas/ArcGISWebMapProvider/layerBuilder/ScatterLayerBuilder.ts","sas/ArcGISWebMapProvider/layerBuilder/FeatureLayerFactory.ts","sas/ArcGISWebMapProvider/SelectionHelper.ts","sas/ArcGISWebMapProvider/VAOptions.ts","sas/ArcGISWebMapProvider/ArcGISVisualizationBridge.ts","Geowebmap.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","l","key","subs","substitutionArguments","forEach","value","i","i18next","t","ProviderUtil","n","isNaN","items","field","reduce","acc","val","undefined","columns","rows","options","categoryVals","uniqueVals","categoryColumnIndex","getIndexWithLabel","color","isChoropleth","visualizationType","VISUALIZATION_TYPE_CHOROPLETH","row","Object","prototype","hasOwnProperty","call","colors","generateColors","length","push","symbol","type","size","style","outline","animation","width","label","colorIndex","usage","match","find","column","name","index","findIndex","error","console","info","msg","target","window","parent","targetOrigin","selectionPublicationTargetOrigin","postMessage","resultName","propertyName","newValue","oldValue","this","publishMessage","event","PROPERTY_CHANGE_EVENT","values","Array","isArray","map","sqlEscapeImpl","sasFormat","moment","utc","valueOf","replace","char","numColors","h","Math","floor","random","hsvToRgb","s","v","r","g","b","f","p","q","a","j","VISUALIZATION_TYPE_NONE","VISUALIZATION_TYPE_SCATTER","VISUALIZATION_TYPE_BUBBLE","VISUALIZATION_TYPE_FILTERED","FIELD_NAME_OBJECT_ID","SAS_FEATURE_LAYER_ID","DEFAULT_PORTAL_URL","AnimationHelper","animationPeriod","_sasLayer","_period","_periodFormat","_animationLabel","_animationPlayButton","_animationSlider","_animationMin","_animationMax","_lastAnimationSliderValue","_animation","resolvePeriodAndFormat","initializeAnimationControls","result","colorColumnLabel","sizeColumnLabel","animationColumnLabel","hasColorCategory","sizeIndex","animationIndex","initialLength","data","x","y","clone","slice","convertToEpochMS","format","formatString","startOf","add","convertDateColumn","minMax","findMinMax","endOf","sasLayer","slider","getAnimationSlider","processAnimationSliderValue","document","getElementById","sliderChangeHandler","stopAnimation","addEventListener","playButton","getAnimationPlayButton","startAnimation","dateColumnIndex","period","found","option","toUpperCase","_periodsAndFormats","paf","getAnimationLabel","innerHTML","animationSliderValue","animationEpochValue","animationValue","isSame","updateAnimationLabel","animationValueBefore","subtract","animationValueAfter","clonedRenderer","hasClonableRenderer","renderer","defaultSymbol","opacityVV","visualVariables","vv","stops","opacity","sliderMax","parseInt","max","sliderMin","min","parseFloat","toString","button","buildAnimationContext","updateAnimationValue","remove","getNameWithLabel","updateAnimationValueFunction","animating","frame","setTimeout","requestAnimationFrame","Severity","message","severity","fromResource","warning","getResource","BaseLayerBuilder","_options","_rows","_columns","buildFeatureLayerImpl","rowObjects","convertRowsToObjects","latitudeColumnName","longitudeColumnName","Graphic","geometry","Point","isValidCoordinate","attributes","fields","Field","alias","objectIDFieldName","object","fieldInfos","fieldInfo","fieldName","visible","digitSeparator","PopupTemplate","title","content","optionNames","missingNames","join","FeatureLayer","source","createGraphics","createFields","objectIdField","spatialReference","SpatialReference","WGS84","elevationInfo","buildElevationInfo","geometryType","popupTemplate","createGenericUnformattedPopupTemplate","mode","useWebScene","use3D","invalidCount","latitudeColumnIndex","longitudeColumnIndex","abs","round","EDITS_COMPLETED","EDITS_APPLIED","SmartLegendHelper","_activeLegends","readiedFeatureLayer","mapView","authoringInfo","authoringVariables","filter","AuthoringInfoVisualVariable","maxSliderValue","minSliderValue","AuthoringInfo","addSmartLegendsImpl","middleStop","midColor","splice","removeSmartLegends","visualVariable","getHistogram","histogramResult","calculateStatistics","statResult","SizeSlider","fromRendererResult","statistics","addSlider","ColorSlider","primaryHandleEnabled","histogramConfig","bins","average","avg","expand","Expand","expandIconClass","view","group","ui","changeFunction","buildOnSmartSizeSliderDataChangeFunction","buildOnSmartColorSliderDataChangeFunction","on","layer","variableIndex","updateVisualVariable","colorVariableIndex","colorVariable","minColor","maxColor","Color","mid","legend","summaryStatistics","histogram","BubbleLayerBuilder","validateRequiredOptions","validateCoordinates","createRenderer","buildSimpleFeatureLayer","excludeWhereSizeIsNull","sizeColumnName","definitionExpression","uniqueValueInfos","generateUniqueVals","minDataValue","maxDataValue","minSize","maxSize","buildAnimationVisualVariable","colorColumnName","colorMin","colorMax","useSmartLegends","expandTwoPartColorRange","ChoroplethLayerBuilder","_geoIdAttributeMap","_geoIdFilter","_queryServiceLayerOverride","geoId","missingIds","override","buildChoroplethFeatureLayer","where","featureServiceWhere","featureServiceGeoId","queryLayer","query","createQuery","outFields","outSpatialReference","buildFilter","featureServiceMaxAllowableOffset","maxAllowableOffset","mapWidth","mapHeight","innerHeight","innerWidth","queryExtent","buildQuery","viewLayer","queryCount","attributeBlock","queryFeatures","results","joinedFeatures","features","feature","dataMatch","applyEdits","addFeatures","emit","logError","create","graphics","geoIdColumnName","graphic","url","featureServiceUrl","sqlEscape","success","fullExtent","extent","calculateMaxAllowableOffset","height","FilteredLayerBuilder","MAX_FILTER_VALUES","buildFilteredFeatureLayer","geoIdIndex","geoIdValues","ScatterLayerBuilder","FeatureLayerFactory","_instance","SelectionHelper","_mapView","_sasFeatureLayerId","_dataResultName","_selectionColumnName","_highlights","sasFeatureLayerId","popup","watch","selection","onSelection","isVisible","dataResultName","selectionColumnName","getMapView","findLayerById","clearSelections","fetchGraphics","lyrView","args","selectedGraphics","drawSelection","whenLayerView","updating","watcher","isUpdating","reason","logInfo","isSasFeature","selections","clearHighlights","layerView","drawHighlights","highlight","VAOptions","optionsConfig","getOptions","buildOptions","R","resourceId","version","urlOption","groups","tooltip","dataProvider","text","placeholder","constraints","ArcGISVisualizationBridge","visualizationOptions","_sasLegend","_animationHelper","_selectionHelper","_smartLegendHelper","_lastMessageReceivedBeforeMapViewRegistered","_hasUserPanned","_warningControl","_warning","useSampleData","zIndex","featuresMax","filterToFeatureServiceGeoId","onMessage","showBasemapSelector","publishPropertyChange","Legend","container","createElement","legendExpand","generateSampleAnimationData","origin","location","highlightOptions","registerMapView","isVAMessage","processMessageEvent","setWarning","postOptions","validateOptions","validateFeaturesMax","removeSasLayer","registerMapData","getNameWithUsage","purgeSasIdiom","convertDates","initializeAnimationData","builder","getInstance","createLayerBuilder","buildFeatureLayer","addOrReplaceSasLayer","supportsEdits","when","sasLayerReadied","editsCompleted","appendWarning","validateResults","applySelectionsFromData","whereClause","getGeoIdFilter","applyFilterToAllLayersWithGeoIDs","oldLayer","goToDataExtent","initializeAnimation","layerEnabled","layerInfos","addSmartLegends","numericColumnIndicies","dateColumnIndices","allLayers","layerHasGeoId","maximum","warnings","validationDiv","setAttribute","expanded","displayWarning","item","appendWarningImpl","current","getWarning","cumulativeWarning","control","getWarningControl","Element","goTo","animate","forDataExtent","queryExtentResultsHandler","goToLayer","Geowebmap","props","_visualizationBridge","_map","_view","state","urlOptions","getOptionsFromUrl","mapDiv","React","createRef","dynamicClassesWebmap","CSS","webmapAnimated","dynamicClassesAnimationControls","animationControlsAnimated","className","base","ref","classnames","webmap","animationControls","readOnly","step","defaultValue","afterMount","urlUtils","href","basemap","portalUrl","element","esriConfig","portalToken","IdentityManager","registerToken","token","server","getPortalUrl","loadUI","portalItemId","PortalItem","load","m","buildMap","use","LanguageDetector","Backend","init","fallbackLng","backend","loadPath","loadPortalItem","portalItem","WebMap","Map","WebScene","buildMapView","SceneView","MapView","addMapWidgets","layerList","LayerList","layerListExpand","basemapGallery","BasemapGallery","basemapExpand","move","search","Search","searchExpand","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","assetsPath","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.91d6b867.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 845;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\n\nexport function initializeI18N(): Promise<any> {\n    return i18next\n        .use(LanguageDetector)\n        .use(Backend)\n        .init({\n            // debug: true,\n            fallbackLng: 'en',\n            backend: {\n                loadPath: 'i18n/{{lng}}.json'\n            }\n        });\n}\n\nexport function l(key: string, ...substitutionArguments: string[]): string {\n    const subs: any = {};\n    (substitutionArguments || []).forEach((value: string, i: number) => {\n        subs[i] = value;\n    });\n    return i18next.t(key, subs);\n}","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport moment from \"moment/moment\";\nimport { l } from \"sas/i18n/resources\";\n\n/**\n * Encapsulates utility features required by more than one class.\n */\nclass ProviderUtil {\n\n    static VISUALIZATION_TYPE_NONE = \"NONE\";\n    static VISUALIZATION_TYPE_SCATTER = \"SCATTER\";\n    static VISUALIZATION_TYPE_BUBBLE = \"BUBBLE\";\n    static VISUALIZATION_TYPE_CHOROPLETH = \"CHOROPLETH\";\n    static VISUALIZATION_TYPE_FILTERED = \"FILTERED\";\n    static FIELD_NAME_OBJECT_ID = \"ObjectId\";\n    static SAS_FEATURE_LAYER_ID = \"_sasFeatureLayerId\";\n    static DEFAULT_PORTAL_URL = \"http://www.arcgis.com\";\n    static PROPERTY_CHANGE_EVENT = \"change\";\n\n    static getResource(key: string, ...substitutionArguments: string[]): string {\n        return l(key, ...substitutionArguments);\n    }\n\n    static isValidCoordinate(n: any): boolean {\n        return !isNaN(n) && n !== null;\n    }\n\n    static findMinMax(items: any[], field?: number): any[] {\n        return items.reduce((acc: any, val: any) => {\n            val = (field !== undefined) ? val[field] : val;\n            if (val === null) {\n                val = undefined;\n            }\n            acc[0] = (acc[0] === undefined || val < acc[0]) ? val : acc[0];\n            acc[1] = (acc[1] === undefined || val > acc[1]) ? val : acc[1];\n            return acc;\n        }, []);\n    }\n\n    static generateUniqueVals(columns: any[], rows: any[], options: any): any[] {\n        const categoryVals = {};\n        const uniqueVals: any[] = [];\n        const categoryColumnIndex = ProviderUtil.getIndexWithLabel(options.color, columns);\n        const isChoropleth = options.visualizationType === ProviderUtil.VISUALIZATION_TYPE_CHOROPLETH;\n\n        rows.forEach((row: any) => {\n            if (!Object.prototype.hasOwnProperty.call(categoryVals, row[categoryColumnIndex])) {\n                categoryVals[row[categoryColumnIndex]] = true;\n            }\n        });\n\n        const keys = Object.keys(categoryVals);\n        const colors = ProviderUtil.generateColors(keys.length);\n\n        for (let i = 0; i < keys.length; i++) {\n            uniqueVals.push({\n                value: keys[i],\n                symbol: {\n                    type: isChoropleth ? \"simple-fill\" : \"simple-marker\", // autocasts as new SimpleMarkerSymbol()\n                    color: colors[i],\n                    size: isChoropleth ? null : 6,\n                    style: isChoropleth ? \"solid\" : \"circle\",\n                    outline: options.animation ?\n                        null : {\n                            width: 0.5,\n                            color: options.outline\n                        }\n                }\n            });\n        }\n\n        return uniqueVals;\n    }\n\n    static hasColorCategory(label: string, columns: any[]): boolean {\n        if (!label) {\n            return false;\n        }\n        const colorIndex = ProviderUtil.getIndexWithLabel(label, columns);\n        return colorIndex > -1 && (columns[colorIndex].usage === \"categorical\" || columns[colorIndex].type === \"string\")\n    }\n\n    static getNameWithLabel(label: string, columns: any[]): string {\n        let match = columns.find((column: any) => {\n            return column && column.name === label;\n        });\n        if (!match) {\n            match = columns.find((column: any) => {\n                return column && column.label === label;\n            });\n        }\n        return (match) ? match.name : null;\n    }\n\n    static getIndexWithLabel(label: string, columns: any[]): number {\n        let index: number = columns.findIndex((column: any) => {\n            return column && column.name === label;\n        });\n        if (index === -1) {\n            index = columns.findIndex((column: any) => {\n                return column && column.label === label;\n            });\n        }\n        return index;\n    }\n\n    static getNameWithUsage(usage: string, columns: any[]): string {\n        const match = columns.find((column: any) => {\n            return column && column.usage === usage;\n        });\n        return (match) ? match.name : null;\n    }\n\n    static logError(error: any): void {\n        if (console && console.error) { console.error(error) } // eslint-disable-line no-console\n    }\n\n    static logInfo(info: any): void {\n        if (console && console.info) { console.info(info) } // eslint-disable-line no-console\n    }\n\n    static publishMessage(msg: any): void {\n        const target = window.parent || window;\n        const targetOrigin = ProviderUtil.selectionPublicationTargetOrigin();\n        if (target) {\n            target.postMessage(msg, targetOrigin);\n        }\n    }\n\n    static publishPropertyChange(resultName: string, propertyName: string, newValue?: any, oldValue?: any): void {\n        this.publishMessage({\n            event: ProviderUtil.PROPERTY_CHANGE_EVENT,\n            resultName,\n            name: propertyName,\n            newValue,\n            oldValue\n        });\n    }\n\n    static sqlEscape(values: any): any {\n\n        if (!Array.isArray(values)) {\n            return ProviderUtil.sqlEscapeImpl(values);\n        }\n        else {\n            return values.map(ProviderUtil.sqlEscapeImpl);\n        }\n\n    }\n\n    // See also https://github.com/sassoftware/sas-visualanalytics-thirdpartyvisualizations.\n    static convertToEpochMS(value: any, sasFormat?: string): number {\n\n        let date: moment.Moment;\n\n        if (sasFormat === \"DDMMYY8\" && typeof value === \"string\") {\n            date = moment.utc(value, \"DD/MM/YYYY\");\n        }\n        else if (sasFormat === \"DATE9\" && typeof value === \"string\") {\n            date = moment.utc(value, \"DDMMMYYYY\");\n        }\n        else {\n            date = moment.utc(value);\n        }\n\n        return date.valueOf(); // Milliseconds since Jan. 1, 1970, UTC.\n\n    }\n\n    /**\n     * Defines the allowed target for the publication of selection events\n     * on the map.  For maximum security, this should return the most \n     * restrictive target possible.  Will depend on where this code is \n     * deployed in relation to VA (e.g., the same domain or a different \n     * domain).  \n     */\n    private static selectionPublicationTargetOrigin(): string {\n        return \"*\"; // Lock down as needed.  E.g., (window.location !== window.parent.location) ? document.referrer : document.location.href;\n    }\n\n    // Following is a variation from sql-escape (https://github.com/packagestats/sql-escape).\n    private static sqlEscapeImpl(value: any): any {\n\n        if (typeof value !== 'string') {\n            return value;\n        }\n\n        return \"'\" + value.replace(/[\\0\\x08\\x09\\x1a\\n\\r\"'\\\\%]/g, (char: string): string => { // eslint-disable-line no-control-regex\n            switch (char) {\n                case \"\\0\":\n                    return \"\\\\0\";\n                case \"\\x08\":\n                    return \"\\\\b\";\n                case \"\\x09\":\n                    return \"\\\\t\";\n                case \"\\x1a\":\n                    return \"\\\\z\";\n                case \"\\n\":\n                    return \"\\\\n\";\n                case \"\\r\":\n                    return \"\\\\r\";\n                case \"\\\"\":\n                case \"'\":\n                case \"\\\\\":\n                case \"%\":\n                    return \"\\\\\" + char; // prepends a backslash to backslash, percent,\n                // and double/single quotes\n                default:\n                    return char;\n            }\n        }) + \"'\";\n    }\n\n    // Credit to: http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n    private static generateColors(numColors: number): any[] {\n        let h = Math.floor(Math.random() * Math.floor(360));\n        const goldenRatioConjugate = 0.618033988749895;\n        const colors: any[] = [];\n\n        const hsvToRgb = (s: number, v: number) => {\n            let r: number;\n            let g: number;\n            let b: number;\n            r = g = b = 0;\n\n            const i = Math.floor(h * 6);\n            const f = h * 6 - i;\n            const p = v * (1 - s);\n            const q = v * (1 - f * s);\n            const t = v * (1 - (1 - f) * s);\n\n            switch (i % 6) {\n                case 0:\n                    r = v;\n                    g = t;\n                    b = p;\n                    break;\n                case 1:\n                    r = q;\n                    g = v;\n                    b = p;\n                    break;\n                case 2:\n                    r = p;\n                    g = v;\n                    b = t;\n                    break;\n                case 3:\n                    r = p;\n                    g = q;\n                    b = v;\n                    break;\n                case 4:\n                    r = t;\n                    g = p;\n                    b = v;\n                    break;\n                case 5:\n                    r = v;\n                    g = p;\n                    b = q;\n                    break;\n            }\n\n            return {\n                r: r * 255,\n                g: g * 255,\n                b: b * 255,\n                a: 1\n            };\n        }\n\n        for (let j = 0; j < numColors; j++) {\n            h += goldenRatioConjugate;\n            h %= 1;\n            colors.push(hsvToRgb(0.7, 0.95))\n        }\n\n        return colors;\n    }\n}\nexport default ProviderUtil;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport Renderer from \"@arcgis/core/renderers/Renderer\";\nimport moment from \"moment/moment\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\n/**\n * Encapsulate the logic for controlling animations.  Asserts that an animation will\n * control opacity over a date range.  Does not currently work with choropleths or\n * SceneViews.\n */\nclass AnimationHelper {\n\n    static buildAnimationVisualVariable(columns: any[], animationColumnLabel: string): { type: string, field: string } {\n        const animationColumnName = ProviderUtil.getNameWithLabel(animationColumnLabel, columns);\n        return {\n            type: \"opacity\",\n            field: animationColumnName\n        };\n    }\n\n    // See https://momentjs.com/docs/#/manipulating/add/ and/or moment.d.ts unitOfTime.\n    private static _periodsAndFormats = [\n        { period: \"YEAR\", format: \"YYYY\" },\n        { period: \"YEARS\", format: \"YYYY\" },\n        { period: \"Y\", format: \"YYYY\" },\n        { period: \"QUARTER\", format: \"L\" },\n        { period: \"QUARTERS\", format: \"L\" },\n        { period: \"Q\", format: \"L\" },\n        { period: \"MONTH\", format: \"L\" },\n        { period: \"MONTHS\", format: \"L\" },\n        { period: \"M\", format: \"L\" },\n        { period: \"WEEK\", format: \"L\" },\n        { period: \"WEEKS\", format: \"L\" },\n        { period: \"W\", format: \"L\" },\n        { period: \"DAY\", format: \"L\" },\n        { period: \"DAYS\", format: \"L\" },\n        { period: \"D\", format: \"L\" },\n        { period: \"HOUR\", format: \"LT\" },\n        { period: \"HOURS\", format: \"LT\" },\n        { period: \"H\", format: \"LT\" },\n        { period: \"MINUTE\", format: \"LT\" },\n        { period: \"MINUTES\", format: \"LT\" },\n        { period: \"M\", format: \"LT\" },\n        { period: \"SECOND\", format: \"LTS\" },\n        { period: \"SECONDS\", format: \"LTS\" },\n        { period: \"S\", format: \"LTS\" },\n        { period: \"MILLISECOND\", format: \"x\" },\n        { period: \"MILLISECONDS\", format: \"x\" },\n        { period: \"MS\", format: \"x\" }\n    ];\n\n    private static hasClonableRenderer(renderer: Renderer): boolean {\n        /* tslint:disable no-string-literal */\n        return renderer && typeof renderer[\"clone\"] === \"function\";\n        /* tslint:enable */\n    }\n\n    private static buildAnimationContext(updateAnimationValueFunction: any): { remove: () => void } {\n\n        let animating = true;\n\n        const frame = () => {\n            if (!animating) {\n                return;\n            }\n            updateAnimationValueFunction();\n            setTimeout(() => { window.requestAnimationFrame(frame); }, 1000 / 30);  // 30 fps\n        };\n\n        frame();\n\n        return {\n            remove() {\n                animating = false;\n            }\n        }\n\n    }\n\n    private _sasLayer: FeatureLayer;\n    private _period: any;\n    private _periodFormat: any;\n    private _animationLabel: HTMLElement | null;\n    private _animationPlayButton: HTMLInputElement | null;\n    private _animationSlider: HTMLInputElement | null;\n    private _animationMin: number;\n    private _animationMax: number;\n    private _lastAnimationSliderValue: moment.Moment | null;\n    private _animation: any;\n\n    constructor(animationPeriod: any) {\n        this.resolvePeriodAndFormat(animationPeriod);\n        this.initializeAnimationControls();\n    }\n\n    generateSampleAnimationData(result: any, colorColumnLabel: string, sizeColumnLabel: string, animationColumnLabel: string): void {\n        let colorIndex;\n        /* tslint:disable prefer-conditional-expression */\n        if (ProviderUtil.hasColorCategory(colorColumnLabel, result.columns)) {\n            colorIndex = -1;\n        }\n        else {\n            colorIndex = ProviderUtil.getIndexWithLabel(colorColumnLabel, result.columns);\n        }\n        /* tslint:enable */\n        const sizeIndex = ProviderUtil.getIndexWithLabel(sizeColumnLabel, result.columns);\n        const animationIndex = ProviderUtil.getIndexWithLabel(animationColumnLabel, result.columns);\n        const initialLength = result.data.length;\n        for (let x = 0; x < initialLength; ++x) {\n            for (let y = 1; y < 11; ++y) {  // Add ten years of sample data.\n                const clone = result.data[x].slice();\n                clone[animationIndex] = moment.utc(ProviderUtil.convertToEpochMS(clone[animationIndex], result.columns[animationIndex].format.formatString)).startOf(this._period).add(y, this._period).valueOf();\n                if (colorIndex > -1) {\n                    clone[colorIndex] = clone[colorIndex] * y;\n                    if (isNaN(clone[colorIndex])) {\n                        clone[colorIndex] = y;\n                    }\n                }  // Progressively approach color max.\n                if (sizeIndex > -1) {\n                    clone[sizeIndex] = clone[sizeIndex] * 2 * Math.random();\n                    if (isNaN(clone[sizeIndex])) {\n                        clone[sizeIndex] = 2 * Math.random();\n                    }\n                } // Randomize size.\n                // Note: if neither size nor color vary, make the sample data randomly omit 25% of the rows (for testing scatter plots).\n                if (colorIndex > -1 || sizeIndex > -1 || Math.random() > 0.75) {\n                    result.data.push(clone);\n                }\n            }\n        }\n    }\n\n    initializeAnimationData(event: any, animationColumnLabel: string): void {\n        this._lastAnimationSliderValue = null;\n        const animationIndex = ProviderUtil.getIndexWithLabel(animationColumnLabel, event.data.columns);\n        this.convertDateColumn(event.data.data, animationIndex);\n        const minMax = ProviderUtil.findMinMax(event.data.data, animationIndex);\n        this._animationMin = moment.utc(minMax[0]).startOf(this._period).valueOf();\n        this._animationMax = moment.utc(minMax[1]).endOf(this._period).valueOf();\n    }\n\n    initializeAnimation(sasLayer: FeatureLayer): void {\n        this._sasLayer = sasLayer;\n        const slider = this.getAnimationSlider();\n        this.processAnimationSliderValue((slider) ? slider.value : 0);\n    }\n\n    private getAnimationSlider(): HTMLInputElement | null {\n        if (!this._animationSlider) {\n            this._animationSlider = document.getElementById(\"animationSlider\") as HTMLInputElement;\n        }\n        return this._animationSlider;\n    }\n\n    private getAnimationPlayButton(): HTMLInputElement | null {\n        if (!this._animationPlayButton) {\n            this._animationPlayButton = document.getElementById(\"animationPlayButton\") as HTMLInputElement;\n        }\n        return this._animationPlayButton;\n    }\n\n    private getAnimationLabel(): HTMLElement | null {\n        if (!this._animationLabel) {\n            this._animationLabel = document.getElementById(\"animationLabel\");\n        }\n        return this._animationLabel;\n    }\n\n    private initializeAnimationControls(): void {\n\n        const sliderChangeHandler = (event: any) => {\n            this.stopAnimation();\n            this.processAnimationSliderValue(event.target.value)\n        };\n\n        const slider = this.getAnimationSlider();\n        if (slider) {\n            slider.addEventListener(\"input\", sliderChangeHandler);\n            slider.addEventListener(\"change\", sliderChangeHandler);\n        }\n\n        const playButton = this.getAnimationPlayButton();\n        if (playButton) {\n            playButton.addEventListener(\"click\", (/* e: any */) => {\n                if (!this._animation) {\n                    this.startAnimation();\n                }\n                else {\n                    this.stopAnimation();\n                }\n            });\n        }\n\n    }\n\n    private convertDateColumn(rows: any[], dateColumnIndex: number): void {\n        rows.forEach((row) => {\n            row[dateColumnIndex] = moment.utc(row[dateColumnIndex]).startOf(this._period).valueOf();\n        });\n    }\n\n    private resolvePeriodAndFormat(period: any): void {\n        let found;\n        if (period) {\n            const option = period.toUpperCase();\n            found = AnimationHelper._periodsAndFormats.find((paf: any) => option === paf.period);\n        }\n        this._period = (found) ? found.period : \"years\";\n        this._periodFormat = (found) ? found.format : \"YYYY\";\n    }\n\n    private updateAnimationLabel(value: any): void {\n        const label = this.getAnimationLabel();\n        if (label) {\n            label.innerHTML = (typeof value === \"object\" && \"format\" in value) ? value.format(this._periodFormat) : value;\n        }\n    }\n\n    private processAnimationSliderValue(animationSliderValue: any): void {\n\n        const animationEpochValue: number = animationSliderValue / 100 * (this._animationMax - this._animationMin) + this._animationMin;\n\n        const animationValue: moment.Moment = moment.utc(animationEpochValue).startOf(this._period);\n\n        if (this._lastAnimationSliderValue !== null && animationValue.isSame(this._lastAnimationSliderValue)) {\n            return;\n        }\n\n        this._lastAnimationSliderValue = moment(animationValue);\n\n        this.updateAnimationLabel(animationValue);\n\n        const animationValueBefore = moment(animationValue).subtract(1, this._period);\n        const animationValueAfter = moment(animationValue).add(1, this._period);\n\n        if (this._sasLayer) {\n            const clonedRenderer = AnimationHelper.hasClonableRenderer(this._sasLayer.renderer) ? (this._sasLayer.renderer as any).clone() : this._sasLayer.renderer;\n            if (clonedRenderer.symbol) {\n                clonedRenderer.symbol.outline = null;\n            }  // TODO: Bind outline opacity to symbol opacity.  Disabled for now.\n            if (clonedRenderer.defaultSymbol) {\n                clonedRenderer.defaultSymbol.outline = null;\n            } // TODO: Bind outline opacity to symbol opacity.  Disabled for now.\n            const opacityVV = clonedRenderer.visualVariables.find((vv: any) => vv.type === \"opacity\");\n            if (opacityVV) {\n                opacityVV.stops = [\n                    { opacity: 0, value: animationValueBefore.valueOf() },\n                    { opacity: 1, value: animationValue.valueOf() },\n                    { opacity: 0, value: animationValueAfter.valueOf() }\n                ];\n            }\n            // In testing, it was determined that visualVariables array assignment\n            // was doing something necessary to the initialization of the renderer.\n            // Without it, past state was not cleared:\n            clonedRenderer.visualVariables = clonedRenderer.visualVariables.slice();\n            this._sasLayer.renderer = clonedRenderer;\n        }\n\n    }\n\n    private updateAnimationValue(): void {\n\n        const slider = this.getAnimationSlider();\n        if (!slider) {\n            return;\n        }\n\n        const sliderMax = parseInt(slider.max, undefined);\n        const sliderMin = parseInt(slider.min, undefined);\n\n        const newValue = parseFloat(slider.value) + (sliderMax - sliderMin) / 1000.0;\n        slider.value = (newValue > sliderMax) ? sliderMin.toString() : newValue.toString();\n\n        this.processAnimationSliderValue(slider.value);\n\n    }\n\n    private startAnimation(): void {\n        this.stopAnimation();\n        const button = this.getAnimationPlayButton();\n        if (button) {\n            button.value = \"||\";\n        }\n        this._animation = AnimationHelper.buildAnimationContext(() => { this.updateAnimationValue(); });\n    }\n\n    private stopAnimation(): void {\n        if (this._animation) {\n            this._animation.remove();\n            this._animation = null;\n            const button = this.getAnimationPlayButton();\n            if (button) {\n                button.value = \">>\";\n            }\n        }\n    }\n\n}\nexport default AnimationHelper;\n","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\nexport enum Severity {\n    error,\n    warning\n}\n\n/**\n * Encapsulates an error.\n */\nclass Error {\n\n    static error(key:string, ...substitutionArguments:string[]):Error {\n        return Error.fromResource(Severity.error, key, ...substitutionArguments);\n    }\n\n    static warning(key:string, ...substitutionArguments:string[]):Error {\n        return Error.fromResource(Severity.warning, key, ...substitutionArguments);\n    }\n\n    private static fromResource(severity:Severity, key:string, ...substitutionArguments:string[]):Error {\n        return new Error(ProviderUtil.getResource(key, ...substitutionArguments), severity);\n    }\n\n    message:string;\n    severity:Severity;\n\n    constructor(message:string, severity:Severity=Severity.error) {\n        this.message = message;\n        this.severity = severity;\n    }\n\n}\nexport default Error;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Point from \"@arcgis/core/geometry/Point\";\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport Field from \"@arcgis/core/layers/support/Field\";\nimport PopupTemplate from \"@arcgis/core/PopupTemplate\";\nimport Error from \"sas/ArcGISWebMapProvider/Error\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\n/**\n * Base class for buildFeatureLayer() and support functions.  Subclasses\n * should override and construct a feature layer in buildFeatureLayerImpl().\n */\nabstract class BaseLayerBuilder {\n\n    static EDITS_COMPLETED = \"editsCompleted\";\n    static EDITS_APPLIED = \"editsApplied\";\n\n    protected _options: any;\n    protected _rows: any[];\n    protected _columns: any[];\n\n    constructor(options: any, rows: any[], columns: any[]) {\n        this._options = options;\n        this._rows = rows;\n        this._columns = columns;\n    }\n\n    supportsEdits(): boolean {\n        return false;\n    }\n\n    buildFeatureLayer(): Promise<FeatureLayer> {\n        return this.buildFeatureLayerImpl();\n    }\n\n    // Subclasses should override this method.  Return string description of errors\n    // for input options.\n    abstract validateOptions(): Error[];\n\n    // Subclasses should override this method.  Return string description of errors\n    // for results.\n    abstract validateResults(): Error[];\n\n    // Subclasses should override this method.  Return where clause used by \n    // feature service (if any).\n    getGeoIdFilter(): any {\n        return undefined;\n    }\n\n    // Subclasses should override this method.  Return a Promise or a feature layer.\n    protected abstract buildFeatureLayerImpl(): Promise<FeatureLayer>;\n\n    protected createGraphics(): Graphic[] {\n\n        const rowObjects = this.convertRowsToObjects(this._columns, this._rows);\n        const latitudeColumnName = ProviderUtil.getNameWithLabel(this._options.y, this._columns);\n        const longitudeColumnName = ProviderUtil.getNameWithLabel(this._options.x, this._columns);\n        return rowObjects.map((row: any) => {\n            return new Graphic({\n                geometry: new Point({\n                    x: !ProviderUtil.isValidCoordinate(row[longitudeColumnName]) ? 0 : row[longitudeColumnName],\n                    y: !ProviderUtil.isValidCoordinate(row[latitudeColumnName]) ? 0 : row[latitudeColumnName]\n                }), // Assumes wkid 102100.\n                attributes: row\n            });\n        });\n\n    }\n\n    protected createFields(): Field[] {\n\n        // Feature layer's \"fields\" property expects objects of {name, alias, type}.\n        const fields = [new Field({ name: ProviderUtil.FIELD_NAME_OBJECT_ID, alias: ProviderUtil.FIELD_NAME_OBJECT_ID, type: \"oid\" })];\n        this._columns.forEach((column: any) => {\n            fields.push(new Field({ name: column.name, alias: column.label, type: ((column.type === \"number\") ? \"double\" : column.type) }));\n        });\n        return fields;\n\n    }\n\n    protected convertRowsToObjects(columns: any[], rows: any[]): any[] {\n        const objectIDFieldName = ProviderUtil.FIELD_NAME_OBJECT_ID;\n        return rows.map((row: any, i: number) => {\n            const object = {};\n            object[objectIDFieldName] = i; // Adding the object ID.\n            let index = 0;\n            columns.forEach((column: any) => {\n                object[column.name] = (index < row.length) ? row[index] : null;\n                ++index;\n            });\n            return object;\n        });\n    }\n\n    protected createGenericUnformattedPopupTemplate(fields: any[]): PopupTemplate {\n        const fieldInfos: any[] = [];\n        fields.forEach((field: any) => {\n            if (field.name !== ProviderUtil.FIELD_NAME_OBJECT_ID && field.name !== ProviderUtil.getNameWithLabel(this._options.x, fields) && field.name !== ProviderUtil.getNameWithLabel(this._options.y, fields)) {\n                const fieldInfo = { fieldName: field.name, label: field.label, visible: true, format: {} }\n                if (field.type === \"number\" || field.type === \"double\") {\n                    fieldInfo.format = { digitSeparator: true };\n                } // places: 2  \n                fieldInfos.push(fieldInfo);\n            }\n        });\n        return new PopupTemplate({ title: this._options.title, content: [{ type: \"fields\", fieldInfos }], fieldInfos: [] });\n    }\n\n    protected validateRequiredOptions(optionNames: string[]): Error[] {\n\n        let message;\n        const missingNames: string[] = [];\n\n        optionNames.forEach((name: string) => {\n            if (!(name in this._options) || !this._options[name] || this._options[name].toString().length === 0) {\n                missingNames.push(name);\n            }\n        });\n\n        if (missingNames.length > 0) {\n            message = ProviderUtil.getResource(\"optionsNotIdentified\", missingNames.join(\", \"));\n        }\n\n        return message ? [new Error(message)] : [];\n\n    }\n\n    // Build simple layer (for scatter and bubble).\n    protected buildSimpleFeatureLayer(renderer: any): FeatureLayer {\n        return new FeatureLayer({\n            id: ProviderUtil.SAS_FEATURE_LAYER_ID,\n            title: this._options.title,\n            source: this.createGraphics(),\n            fields: this.createFields(),\n            objectIdField: ProviderUtil.FIELD_NAME_OBJECT_ID,\n            renderer,\n            spatialReference: SpatialReference.WGS84,\n            elevationInfo: this.buildElevationInfo(),\n            geometryType: \"point\",\n            popupTemplate: this.createGenericUnformattedPopupTemplate(this._columns)\n        });\n    }\n\n    protected buildElevationInfo(): __esri.FeatureLayerElevationInfo {\n        return { mode: (this._options.useWebScene || this._options.use3D) ? \"on-the-ground\" : \"relative-to-ground\" };\n    }\n\n    // Validates lat/long data (for scatter and bubble).\n    protected validateCoordinates(rows: any[], columns: any[]): Error[] {\n\n        let error: Error | null = null;\n        let invalidCount = 0;\n        const latitudeColumnIndex = ProviderUtil.getIndexWithLabel(this._options.y, columns);\n        const longitudeColumnIndex = ProviderUtil.getIndexWithLabel(this._options.x, columns);\n\n        if (latitudeColumnIndex < 0 || longitudeColumnIndex < 0) {\n            error = Error.error(\"dataNotIdentified\");\n        } else {\n            rows.forEach((row: any) => {\n                if (!ProviderUtil.isValidCoordinate(row[latitudeColumnIndex]) ||\n                    !ProviderUtil.isValidCoordinate(row[longitudeColumnIndex]) ||\n                    Math.abs(Math.round(row[latitudeColumnIndex])) > 90 ||\n                    Math.abs(Math.round(row[longitudeColumnIndex])) > 180) {\n                    ++invalidCount;\n                }\n            });\n            if (invalidCount > 0) {\n                error = Error.warning(\"invalidCoordinates\", invalidCount.toString());\n            }\n        }\n\n        return error ? [error] : [];\n\n    }\n}\nexport default BaseLayerBuilder;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Color from \"@arcgis/core/Color\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport AuthoringInfo from \"@arcgis/core/renderers/support/AuthoringInfo\";\nimport AuthoringInfoVisualVariable from \"@arcgis/core/renderers/support/AuthoringInfoVisualVariable\";\nimport ColorVariable from \"@arcgis/core/renderers/visualVariables/ColorVariable\";\nimport SizeVariable from \"@arcgis/core/renderers/visualVariables/SizeVariable\";\nimport VisualVariable from \"@arcgis/core/renderers/visualVariables/VisualVariable\";\nimport histogram from \"@arcgis/core/smartMapping/statistics/histogram\";\nimport summaryStatistics from \"@arcgis/core/smartMapping/statistics/summaryStatistics\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport Expand from \"@arcgis/core/widgets/Expand\";\nimport Legend from \"@arcgis/core/widgets/Legend\";\nimport ColorSlider from \"@arcgis/core/widgets/smartMapping/ColorSlider\";\nimport SizeSlider from \"@arcgis/core/widgets/smartMapping/SizeSlider\";\n\n/**\n * Encapsulate the logic for \"smart mapping\" legends.\n */\nclass SmartLegendHelper {\n\n    private _activeLegends: any[] = [];\n\n    /**\n     * Issues:\n     * \n     * - This is a highly experimental implementation of multivariate smart mapping.  \n     *   Smart mapping behaviors require an AuthorizationInfo on the renderer, which \n     *   client-side renderers do not have. Below, one is \"primed\" from an invocation \n     *   of createContinuousRenderer().  \n     * \n     * https://developers.arcgis.com/javascript/latest/sample-code/visualization-sm-multivariate/index.html\n     * https://developers.arcgis.com/javascript/latest/sample-code/sandbox/index.html?sample=visualization-sm-size\n     * https://developers.arcgis.com/javascript/latest/sample-code/visualization-sm-color/index.html\n     */\n\n    addSmartLegends(readiedFeatureLayer: FeatureLayer, mapView: MapView | SceneView): void {\n\n        if (readiedFeatureLayer && readiedFeatureLayer.renderer && !readiedFeatureLayer.renderer.authoringInfo) {\n\n            const visualVariables = (readiedFeatureLayer.renderer as any).visualVariables || [];\n\n            const authoringVariables: AuthoringInfoVisualVariable[] = visualVariables\n                .filter((v: VisualVariable) => {\n                    return v.type === \"size\" || v.type === \"color\";\n                })\n                .map((v: VisualVariable) => {\n                    return new AuthoringInfoVisualVariable({\n                        type: v.type as any,\n                        maxSliderValue: 0,\n                        minSliderValue: 0\n                    });\n                });\n\n            readiedFeatureLayer.renderer.authoringInfo = new AuthoringInfo({ visualVariables: authoringVariables });\n\n        }\n\n        this.addSmartLegendsImpl(readiedFeatureLayer, mapView);\n\n    }\n\n    expandTwoPartColorRange(stops: any[]): void {\n        if (stops && stops.length === 2) {\n            const middleStop = {\n                value: (stops[1].value - stops[0].value) / 2 + stops[0].value,\n                color: this.midColor(stops[0].color, stops[1].color)\n            }\n            stops.splice(1, 0, middleStop);\n        }\n    }\n\n    private addSmartLegendsImpl(readiedFeatureLayer: FeatureLayer, mapView: MapView | SceneView): void {\n\n        this.removeSmartLegends(mapView);\n\n        const visualVariables = (readiedFeatureLayer.renderer as any).visualVariables || [];\n\n        visualVariables.forEach((visualVariable: VisualVariable) => {\n\n            if (visualVariable.type === \"size\") {\n\n                this.getHistogram(readiedFeatureLayer, visualVariable)\n                    .then((histogramResult: __esri.HistogramResult) => {\n                        return this.calculateStatistics(readiedFeatureLayer, visualVariable)\n                            .then((statResult: __esri.SummaryStatisticsResult) => {\n\n                                const slider: SizeSlider = SizeSlider.fromRendererResult(\n                                    {\n                                        renderer: (readiedFeatureLayer.renderer as any),\n                                        statistics: statResult,\n                                        visualVariables: [(visualVariable as SizeVariable)]\n                                    } as any,\n                                    histogramResult\n                                );\n\n                                this.addSlider(readiedFeatureLayer, mapView, slider);\n\n                            });\n                    });\n\n            } else if (visualVariable.type === \"color\") {\n\n                this.getHistogram(readiedFeatureLayer, visualVariable)\n                    .then((histogramResult: __esri.HistogramResult) => {\n                        return this.calculateStatistics(readiedFeatureLayer, visualVariable)\n                            .then((statResult: __esri.SummaryStatisticsResult) => {\n\n                                const slider: ColorSlider = new ColorSlider({\n                                    primaryHandleEnabled: true,\n                                    stops: (visualVariable as ColorVariable).stops,\n                                    histogramConfig: {\n                                        bins: histogramResult.bins,\n                                        average: statResult.avg\n                                    },\n                                    min: statResult.min,\n                                    max: statResult.max\n                                });\n\n                                this.addSlider(readiedFeatureLayer, mapView, slider);\n\n                            });\n                    });\n\n            }\n\n        });\n\n    }\n\n    private addSlider(readiedFeatureLayer: FeatureLayer, mapView: MapView | SceneView, slider: SizeSlider | ColorSlider): void {\n\n        const expand = new Expand({ expandIconClass: \"esri-icon-question\", view: mapView, content: slider, group: \"bottom-left\" });\n        mapView.ui.add(expand, \"bottom-left\");\n        this._activeLegends.push(expand);\n\n        const changeFunction = (slider instanceof SizeSlider) ?\n            this.buildOnSmartSizeSliderDataChangeFunction(readiedFeatureLayer, slider as SizeSlider) :\n            this.buildOnSmartColorSliderDataChangeFunction(readiedFeatureLayer, slider as ColorSlider);\n\n        slider.on(\"thumb-change\", changeFunction);\n        slider.on(\"thumb-drag\", changeFunction);\n        slider.on(\"max-change\", changeFunction);\n        slider.on(\"min-change\", changeFunction);\n\n    }\n\n    private buildOnSmartSizeSliderDataChangeFunction(layer: any, slider: SizeSlider): () => void {\n        return () => {\n            const renderer = layer.renderer.clone();\n            const variableIndex: number = renderer.visualVariables.findIndex((vv: VisualVariable) => vv.type === \"size\");\n            if (variableIndex < 0) {\n                return;\n            }\n            renderer.visualVariables.splice(variableIndex, 1, slider.updateVisualVariable(renderer.visualVariables[variableIndex]))\n            layer.renderer = renderer;\n        }\n    }\n\n    private buildOnSmartColorSliderDataChangeFunction(layer: any, slider: ColorSlider): () => void {\n        return () => {\n            const renderer = layer.renderer.clone();\n            const colorVariableIndex: number = renderer.visualVariables.findIndex((vv: VisualVariable) => vv.type === \"color\");\n            if (colorVariableIndex < 0) {\n                return;\n            }\n            const colorVariable: any = renderer.visualVariables[colorVariableIndex].clone();\n\n            colorVariable.stops = slider.stops;\n            renderer.visualVariables.splice(colorVariableIndex, 1, colorVariable)\n            layer.renderer = renderer;\n        }\n    }\n\n    private midColor(minColor: any, maxColor: any): Color {\n\n        // Following yields a tri-part blend with white as the middle color:\n        // Color.blendColors(new Color(minColor), new Color(maxColor));\n\n        // Following blends the color inputs:\n\n        minColor = new Color(minColor);\n        maxColor = new Color(maxColor);\n\n        const mid = (a: number, b: number) => {\n            let max;\n            let min;\n            if (a > b) {\n                max = a;\n                min = b;\n            } else {\n                max = b;\n                min = a;\n            }\n            return (max - min) / 2 + min;\n        }\n\n        return new Color({\n            a: mid(minColor.a, maxColor.a),\n            b: mid(minColor.b, maxColor.b),\n            r: mid(minColor.r, maxColor.r),\n            g: mid(minColor.g, maxColor.g)\n        });\n    }\n\n    private removeSmartLegends(mapView: any): void {\n        this._activeLegends.forEach((legend: Legend) => { mapView.ui.remove(legend); });\n        this._activeLegends = [];\n    }\n\n    private calculateStatistics(layer: FeatureLayer, visualVariable: VisualVariable): Promise<__esri.SummaryStatisticsResult> {\n        return summaryStatistics({ layer, field: visualVariable.field });\n    }\n\n    private getHistogram(layer: FeatureLayer, visualVariable: VisualVariable): Promise<__esri.HistogramResult> {\n        return histogram({ layer, field: visualVariable.field });\n    }\n\n}\nexport default SmartLegendHelper;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { resolve } from \"@arcgis/core/core/promiseUtils\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport AnimationHelper from \"sas/ArcGISWebMapProvider/AnimationHelper\";\nimport Error from \"sas/ArcGISWebMapProvider/Error\";\nimport BaseLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\nimport SmartLegendHelper from \"sas/ArcGISWebMapProvider/SmartLegendHelper\";\n\n/**\n * Responsible for consuming incoming data from SAS Visual Analytics to create a \n * bubble plot feature layer in a web map.\n */\nclass BubbleLayerBuilder extends BaseLayerBuilder {\n\n    validateOptions(): Error[] {\n        return this.validateRequiredOptions(['x', 'y', 'size']);\n    }\n\n    validateResults(): Error[] {\n        return this.validateCoordinates(this._rows, this._columns);\n    }\n\n    protected buildFeatureLayerImpl(): Promise<FeatureLayer> {\n        const renderer = this.createRenderer(this._rows, this._columns);\n        const layer = this.buildSimpleFeatureLayer(renderer);\n        this.excludeWhereSizeIsNull(layer);\n        return resolve(layer);\n    }\n\n    private excludeWhereSizeIsNull(layer: FeatureLayer): void {\n        if (this._options.size) {\n            const sizeColumnName = ProviderUtil.getNameWithLabel(this._options.size, this._columns);\n            if (sizeColumnName !== null && sizeColumnName.length > 0) {\n                layer.definitionExpression = sizeColumnName + \" IS NOT NULL\";\n            }\n        }\n    }\n\n    private createRenderer(rows: any[], columns: any[]): any {\n\n        const visualVariables: any[] = [];\n        let minMax;\n        let renderer;\n\n        // Create either unique-value renderer or simple renderer\n        if (ProviderUtil.hasColorCategory(this._options.color, columns)) {\n            renderer = {\n                type: \"unique-value\",\n                field: ProviderUtil.getNameWithLabel(this._options.color, columns),\n                defaultSymbol: {\n                    type: \"simple-marker\",  // autocasts as new SimpleMarkerSymbol()\n                    color: \"blue\",\n                    size: 6,\n                    outline: {\n                        width: 0.5,\n                        color: this._options.outline\n                    }\n                },\n                uniqueValueInfos: ProviderUtil.generateUniqueVals(columns, rows, this._options),\n                visualVariables\n            };\n        } else {\n            renderer = {\n                type: \"simple\",\n                symbol: {\n                    type: \"simple-marker\",\n                    size: 2, // The 4.6 \"0\" setting automatically suppresses null/undefined values, but suppressess all graphics in 4.10.  A size of \"2\" leaves a few pixels.\n                    outline: {\n                        color: this._options.outline,\n                        width: 0.5,\n                        opacity: 0\n                    }\n                },\n                visualVariables\n            };\n        }\n\n        if (this._options.size) {\n            const sizeColumnName = ProviderUtil.getNameWithLabel(this._options.size, columns);\n            const sizeIndex = ProviderUtil.getIndexWithLabel(this._options.size, columns);\n            minMax = ProviderUtil.findMinMax(rows, sizeIndex);\n            renderer.visualVariables.push({\n                type: \"size\",\n                field: sizeColumnName,\n                minDataValue: minMax[0],\n                maxDataValue: minMax[1],\n                minSize: 6,\n                maxSize: 30\n            });\n        }\n\n        if (this._options.animation) {\n            renderer.visualVariables.push(AnimationHelper.buildAnimationVisualVariable(columns, this._options.animation));\n        }\n\n        if (!ProviderUtil.hasColorCategory(this._options.color, columns)) {\n            const colorColumnName = ProviderUtil.getNameWithLabel(this._options.color, columns);\n            const colorIndex = ProviderUtil.getIndexWithLabel(this._options.color, columns);\n\n            minMax = ProviderUtil.findMinMax(rows, colorIndex);\n            renderer.visualVariables.push({\n                type: \"color\",\n                field: colorColumnName,\n                stops: [\n                    {\n                        value: minMax[0],\n                        color: this._options.colorMin\n                    },\n                    {\n                        value: minMax[1],\n                        color: this._options.colorMax\n                    }]\n            });\n            if (this._options.useSmartLegends) {\n                new SmartLegendHelper().expandTwoPartColorRange(visualVariables[visualVariables.length - 1].stops);\n            }\n        }\n\n        // This 3D render requires the symbol to be measured in meters, and the correct\n        // choice really depends on the expected extent; so, if it were generalized, \n        // it would have to be exposed as another querystring option. See the \n        // commented code in the visualVariables definition above.\n        // } else {\n        //     renderer =  {\n        //         type: \"simple\", \n        //         symbol: {\n        //             type: \"point-3d\", \n        //             symbolLayers: [{\n        //                 type: \"object\",\n        //                 width: 0,\n        //                 height: 0,\n        //                 depth: 0,\n        //                 resource: { primitive: \"cylinder\" }\n        //             }],\n        //             outline: { \n        //                 color: this._options.outline,  \n        //                 width: 0.5\n        //             }\n        //         },\n        //         visualVariables: visualVariables\n        //     };\n        // }\n\n        return renderer;\n    }\n}\nexport default BubbleLayerBuilder;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { create } from \"@arcgis/core/core/promiseUtils\";\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport Query from \"@arcgis/core/tasks/support/Query\";\nimport Error from \"sas/ArcGISWebMapProvider/Error\";\nimport BaseLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\nimport SmartLegendHelper from \"sas/ArcGISWebMapProvider/SmartLegendHelper\";\n\n/**\n * Responsible for consuming incoming data from SAS Visual Analytics to create a \n * bubble plot feature layer in a web map.\n */\nclass ChoroplethLayerBuilder extends BaseLayerBuilder {\n\n    private _geoIdAttributeMap: any;\n    private _geoIdFilter: any;\n    private _queryServiceLayerOverride: any;\n\n    supportsEdits(): boolean {\n        return true;\n    }\n\n    validateOptions(): Error[] {\n        return this.validateRequiredOptions(['geoId', 'featureServiceUrl', 'featureServiceGeoId']);\n    }\n\n    validateResults(): Error[] {\n\n        let error: Error | null = null;\n\n        if (ProviderUtil.getIndexWithLabel(this._options.geoId, this._columns) < 0) {\n            error = Error.error(\"dataNotIdentifiedGeoId\");\n        } else {\n            const missingIds = Object.keys(this._geoIdAttributeMap);\n            if (missingIds.length > 0 && missingIds.length < 6) {\n                error = Error.warning(\"regionsNotFoundFew\", missingIds.join(\", \"));\n            }\n            else if (missingIds.length > 6) {\n                error = Error.warning(\"regionsNotFoundMany\", missingIds.slice(0, 5).join(\", \"));\n            }\n        }\n\n        return error ? [error] : [];\n    }\n\n    getGeoIdFilter(): any {\n        return this._geoIdFilter;\n    }\n\n    // Provided to support unit tests mocking the geometry-providing feature service.\n    setQueryServiceLayerOverride(override: any) {\n        this._queryServiceLayerOverride = override;\n    }\n\n    protected buildFeatureLayerImpl(): Promise<FeatureLayer> {\n        const renderer = this.createRenderer(this._rows, this._columns);\n        return this.buildChoroplethFeatureLayer(renderer, this._rows, this._columns);\n    }\n\n    private createRenderer(rows: any[], columns: any) {\n\n        const visualVariables: any[] = [];\n        let minMax: any;\n        let renderer: any;\n\n        if (ProviderUtil.hasColorCategory(this._options.color, columns)) {\n            renderer = {\n                type: \"unique-value\",\n                field: ProviderUtil.getNameWithLabel(this._options.color, columns),\n                defaultSymbol: {\n                    type: \"simple-fill\",  // autocasts as new SimpleMarkerSymbol()\n                    color: \"blue\",\n                    style: \"solid\",\n                    outline: {\n                        width: 0.5,\n                        color: this._options.outline\n                    }\n                },\n                uniqueValueInfos: ProviderUtil.generateUniqueVals(columns, rows, this._options),\n                visualVariables\n            };\n        } else {\n            renderer = {\n                type: \"simple\",\n                symbol: {\n                    type: \"simple-fill\",\n                    color: this._options.colorMax,\n                    outline: {\n                        color: this._options.outline,\n                        width: 0.5\n                    }\n                },\n                visualVariables\n            };\n        }\n\n        if (!ProviderUtil.hasColorCategory(this._options.color, columns) && this._options.color) {\n            const colorColumnName = ProviderUtil.getNameWithLabel(this._options.color, columns);\n            const colorIndex = ProviderUtil.getIndexWithLabel(this._options.color, columns);\n            minMax = ProviderUtil.findMinMax(rows, colorIndex);\n            renderer.visualVariables.push({\n                type: \"color\",\n                field: colorColumnName,\n                stops: [\n                    {\n                        value: minMax[0],\n                        color: this._options.colorMin\n                    },\n                    {\n                        value: minMax[1],\n                        color: this._options.colorMax\n                    }]\n            });\n            if (this._options.useSmartLegends) {\n                new SmartLegendHelper().expandTwoPartColorRange(visualVariables[visualVariables.length - 1].stops);\n            }\n        }\n\n        return renderer;\n    }\n\n    private buildFilter(values: any[]): string {\n\n        let where = \"\";\n\n        if (this._options.featureServiceWhere) {\n            where = \"(\" + this._options.featureServiceWhere + \") AND \";\n        }\n\n        where += \"(\" + this._options.featureServiceGeoId +\n            \" IN (\" +\n            values.join() +\n            \"))\";\n\n        return where;\n    }\n\n    private buildQuery(queryLayer: FeatureLayer, values: any[]): Query {\n\n        const query: any = queryLayer.createQuery();\n\n        query.outFields = [this._options.featureServiceGeoId]; // Note: [\"*\"] Gets _all_ attributes, which noticeably slows performance.\n        query.outSpatialReference = SpatialReference.WGS84;\n        query.where = this.buildFilter(values);\n        if (!isNaN(this._options.featureServiceMaxAllowableOffset)) {\n            query.maxAllowableOffset = this._options.featureServiceMaxAllowableOffset;\n        }\n\n        return query;\n    }\n\n    private calculateMaxAllowableOffset(mapWidth: number, mapHeight: number): number {\n        const pixelScale: number = window.innerHeight / window.innerWidth; // screen.height / screen.width;\n        const mapScale: number = mapHeight / mapWidth;\n        return (pixelScale > mapScale) ? mapWidth / window.innerWidth : mapHeight / window.innerHeight;\n    }\n\n    private queryExtent(queryLayer: FeatureLayer, values: any[]): any {\n        return queryLayer.queryExtent(this.buildQuery(queryLayer, values));\n    }\n\n    private queryFeatures(queryLayer: FeatureLayer, values: any[], viewLayer: FeatureLayer): any {\n\n        let queryCount = 0;\n\n        const MAX_FEATURES = 500;\n\n        while (values.length > 0) {\n\n            ++queryCount;\n\n            const attributeBlock = values.splice(0, MAX_FEATURES);\n\n            const query: any = this.buildQuery(queryLayer, attributeBlock);\n\n            // Assertions: queryCount promise executed in-scope:\n            // eslint-disable-next-line no-loop-func  \n            queryLayer.queryFeatures(query).then((results: any) => {\n\n                // Join the data to the geometries.\n\n                const joinedFeatures: any[] = [];\n                results.features.forEach((feature: any) => {\n\n                    // VA attributes, mapped by _options.geoId, are joined to the feature layer geometries \n                    // by _options.featureLayerGeoId.\n\n                    const dataMatch = this._geoIdAttributeMap[feature.attributes[this._options.featureServiceGeoId]];\n\n                    if (dataMatch) {\n                        for (const key in dataMatch) {\n                            if (Object.prototype.hasOwnProperty.call(dataMatch, key)) {\n                                feature.attributes[key] = dataMatch[key];\n                            }\n                        }\n                        joinedFeatures.push(feature);\n                        delete this._geoIdAttributeMap[feature.attributes[this._options.featureServiceGeoId]]\n                    }\n\n                });\n\n                // console.info (\"Adding features \", joinedFeatures);\n\n                viewLayer.applyEdits({\n                    addFeatures: joinedFeatures\n                }).then(() => {\n                    viewLayer.emit(BaseLayerBuilder.EDITS_APPLIED);\n                    if (--queryCount < 1) {\n                        viewLayer.emit(BaseLayerBuilder.EDITS_COMPLETED);\n                    }\n                }, (error: any) => {\n                    ProviderUtil.logError(error);\n                });\n\n            }, (error: any) => {\n                ProviderUtil.logError(error)\n            });\n\n        }\n\n    }\n\n    private buildChoroplethFeatureLayer(renderer: any, rows: any[], columns: any[]): Promise<FeatureLayer> {\n\n        // We return a promise that the feature layer is _ready_\n        // to be added to a map.\n\n        return create((resolve /* , reject */) => {\n\n            const layerSource: any[] = [];\n\n            const graphics = this.createGraphics();\n            const fields = this.createFields();\n\n            // Build a list of VA-supplied attributes mapped by GeoID.\n\n            const geoIdColumnName = ProviderUtil.getNameWithLabel(this._options.geoId, columns);\n            this._geoIdAttributeMap = {};\n            graphics.forEach((graphic: any) => {\n                this._geoIdAttributeMap[graphic.attributes[geoIdColumnName]] = graphic.attributes;\n            });\n\n            const viewLayer: any = new FeatureLayer({\n                id: ProviderUtil.SAS_FEATURE_LAYER_ID,\n                title: this._options.title,\n                source: layerSource,\n                fields,\n                objectIdField: ProviderUtil.FIELD_NAME_OBJECT_ID,\n                renderer,\n                // spatialReference: lang.clone(results.spatialReference),\n                // Note: there are ArcGIS 4.6 hit-test related problems with SceneViews with elevation mode \"on-the-ground\"\n                geometryType: \"polygon\",\n                popupTemplate: this.createGenericUnformattedPopupTemplate(columns),\n                spatialReference: SpatialReference.WGS84\n            });\n\n            if (graphics.length < 1) {\n                resolve(viewLayer);\n                setTimeout(() => { viewLayer.emit(BaseLayerBuilder.EDITS_COMPLETED); }, 10);\n                return; // RETURN immediately.\n            }\n\n            let queryLayer: any;\n            if (this._queryServiceLayerOverride) {\n                queryLayer = this._queryServiceLayerOverride;\n            } else {\n                queryLayer = new FeatureLayer({\n                    url: this._options.featureServiceUrl,\n                    objectIdField: ProviderUtil.FIELD_NAME_OBJECT_ID,\n                    spatialReference: SpatialReference.WGS84\n                });\n            }\n\n            const attributes = ProviderUtil.sqlEscape(Object.keys(this._geoIdAttributeMap));\n\n            this.queryExtent(queryLayer, attributes).then((success: any) => {\n                viewLayer.fullExtent = success.extent;\n                resolve(viewLayer);\n                if (isNaN(this._options.featureServiceMaxAllowableOffset)) {\n                    this._options.featureServiceMaxAllowableOffset = this.calculateMaxAllowableOffset(success.extent.width, success.extent.height);\n                }\n                this.queryFeatures(queryLayer, attributes, viewLayer);\n            },\n                (error: any) => {\n                    ProviderUtil.logError(error);\n                    resolve(viewLayer); // Still returning what we have.\n                });\n\n            return;\n        });\n\n    }\n}\nexport default ChoroplethLayerBuilder;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { resolve } from \"@arcgis/core/core/promiseUtils\";\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport Error from \"sas/ArcGISWebMapProvider/Error\";\nimport BaseLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\n/**\n * Responsible for consuming incoming data from SAS Visual Analytics to filter\n * the features displayed on any feature layer.  Note that this returns a \n * regular feature layer, and it will participate in filtering actions, but\n * not selection actions. \n */\nclass FilteredLayerBuilder extends BaseLayerBuilder {\n\n    private static MAX_FILTER_VALUES = 500;\n    private _geoIdFilter: any;\n\n    validateOptions(): Error[] {\n        return this.validateRequiredOptions(['geoId', 'featureServiceUrl', 'featureServiceGeoId']);\n    }\n\n    validateResults(): Error[] {\n\n        let error: Error | null = null;\n\n        if (ProviderUtil.getIndexWithLabel(this._options.geoId, this._columns) < 0) {\n            error = Error.error(\"dataNotIdentifiedGeoId\");\n        }\n        else if (this._rows.length > FilteredLayerBuilder.MAX_FILTER_VALUES) {\n            error = Error.error(\"tooManyFilteredValues\", FilteredLayerBuilder.MAX_FILTER_VALUES.toString());\n        }\n\n        return (error) ? [error] : [];\n    }\n\n    getGeoIdFilter(): any {\n        return this._geoIdFilter;\n    }\n\n    protected buildFeatureLayerImpl(): Promise<FeatureLayer> {\n        return resolve(this.buildFilteredFeatureLayer(this._rows, this._columns));\n    }\n\n    private buildFilteredFeatureLayer(rows: any[], columns: any[]) {\n\n        const geoIdIndex = ProviderUtil.getIndexWithLabel(this._options.geoId, columns);\n        const geoIdValues = rows.map((row) => row[geoIdIndex]);\n\n        this._geoIdFilter =\n            this._options.featureServiceGeoId +\n            \" IN (\" +\n            ProviderUtil.sqlEscape(geoIdValues) +\n            \")\";\n\n        const viewLayer: any = new FeatureLayer({\n            id: ProviderUtil.SAS_FEATURE_LAYER_ID,\n            title: this._options.title,\n            url: this._options.featureServiceUrl,\n            spatialReference: SpatialReference.WGS84,\n            definitionExpression: this._geoIdFilter\n        });\n\n        return viewLayer;\n\n    }\n\n}\nexport default FilteredLayerBuilder;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Responsible for consuming incoming data from SAS Visual Analytics to create a \n * scatter plot feature layer in a web map.\n */\n\nimport { resolve } from \"@arcgis/core/core/promiseUtils\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport AnimationHelper from \"sas/ArcGISWebMapProvider/AnimationHelper\";\nimport Error from \"sas/ArcGISWebMapProvider/Error\";\nimport BaseLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\n/**\n * Responsible for consuming incoming data from SAS Visual Analytics to create a \n * bubble plot feature layer in a web map.\n */\nclass ScatterLayerBuilder extends BaseLayerBuilder {\n\n    validateOptions(): Error[] {\n        return this.validateRequiredOptions(['x', 'y']);\n    }\n\n    validateResults(): Error[] {\n        return this.validateCoordinates(this._rows, this._columns);\n    }\n\n    protected buildFeatureLayerImpl(): Promise<FeatureLayer> {\n        const renderer = this.createRenderer(this._rows, this._columns);\n        return resolve(this.buildSimpleFeatureLayer(renderer));\n    }\n\n    private createRenderer(rows: any[], columns: any[]): any {\n        const visualVariables: any[] = [];\n        let renderer;\n\n        if (this._options.animation) {\n            visualVariables.push(AnimationHelper.buildAnimationVisualVariable(columns, this._options.animation));\n        }\n\n        if (ProviderUtil.hasColorCategory(this._options.color, columns)) {\n            renderer = {\n                type: \"unique-value\",\n                field: ProviderUtil.getNameWithLabel(this._options.color, columns),\n                defaultSymbol: {\n                    type: \"simple-marker\",  // autocasts as new SimpleMarkerSymbol()\n                    color: \"green\",\n                    size: 6,\n                    outline: {\n                        width: 0.5,\n                        color: this._options.outline\n                    }\n                },\n                uniqueValueInfos: ProviderUtil.generateUniqueVals(columns, rows, this._options),\n                visualVariables\n            };\n        } else {\n            renderer = {\n                type: \"simple\",\n                symbol: {\n                    type: \"simple-marker\",\n                    size: 6,\n                    color: this._options.colorMax,\n                    outline: {\n                        width: 0.5,\n                        color: this._options.outline\n                    }\n                },\n                visualVariables\n            };\n        }\n\n        return renderer;\n    }\n}\nexport default ScatterLayerBuilder;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport BaseLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder\";\nimport BubbleLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BubbleLayerBuilder\";\nimport ChoroplethLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/ChoroplethLayerBuilder\";\nimport FilteredLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/FilteredLayerBuilder\";\nimport ScatterLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/ScatterLayerBuilder\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\n/**\n * Builds a feature layer.\n */\nclass FeatureLayerFactory { \n\n    static getInstance():FeatureLayerFactory {\n        if (!FeatureLayerFactory._instance) {\n            FeatureLayerFactory._instance = new FeatureLayerFactory();\n        }\n        return FeatureLayerFactory._instance;\n    }\n\n    private static _instance: FeatureLayerFactory;\n\n    private constructor() {}\n\n    createLayerBuilder(options: any, rows: any[], columns: any[]): BaseLayerBuilder {\n\n        switch (options.visualizationType) {\n            case ProviderUtil.VISUALIZATION_TYPE_BUBBLE:\n                return new BubbleLayerBuilder(options, rows, columns);\n            case ProviderUtil.VISUALIZATION_TYPE_CHOROPLETH:\n                return new ChoroplethLayerBuilder(options, rows, columns);\n            case ProviderUtil.VISUALIZATION_TYPE_FILTERED:\n                return new FilteredLayerBuilder(options, rows, columns);\n            default: \n                return new ScatterLayerBuilder(options, rows, columns);\n        }\n\n    }\n}\nexport default FeatureLayerFactory","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Graphic from \"@arcgis/core/Graphic\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport FeatureSet from \"@arcgis/core/tasks/support/FeatureSet\";\nimport FeatureLayerView from \"@arcgis/core/views/layers/FeatureLayerView\";\nimport View from \"@arcgis/core/views/View\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\n/**\n * Encapsulate the logic for selection processing.\n */\nclass SelectionHelper {\n\n    private _mapView: View;\n    private _sasFeatureLayerId: string;\n    private _dataResultName: string;        // Name of incoming dataset (from VA)\n    private _selectionColumnName: string;   // Column of incoming dataset that is used to brush data\n    private _highlights: any;\n\n    registerMapView(mapView: View, sasFeatureLayerId: string): void {\n\n        this._mapView = mapView;\n        this._sasFeatureLayerId = sasFeatureLayerId;\n\n        // ArcGIS for Javascript 4.6: selectedFeature fires when window opens, having clicked \n        // on a feature, when clicking on a new feature, and when the window\n        // closes, having clicked on something _not_ a feature.  It \n        // does not fire when the user dismisses the popup (even though it \n        // clears the highlight in SceneView).  Convert this combination\n        // into a selection handler.\n        this._mapView.popup.watch(\"selectedFeature\", (selection: any) => {\n            if (selection) {\n                this.onSelection(selection);\n            }\n        });\n        this._mapView.popup.watch(\"visible\", (isVisible: boolean) => {\n            if (!isVisible) {\n                this.onSelection(null);\n            }\n        });\n\n    }\n\n    registerMapData(dataResultName: string, selectionColumnName: string): void {\n        this._dataResultName = dataResultName;\n        this._selectionColumnName = selectionColumnName;\n    }\n\n    /**\n     * Processes selection state embedded in data incoming from VA.\n     */\n    applySelectionsFromData(sasLayer: FeatureLayer): void {\n\n        const view = this.getMapView();\n        const map = (view) ? view.map : null;\n        if (map && !map.findLayerById(sasLayer.id)) {\n            ProviderUtil.logInfo(\"Cannot apply selections before layer added to map.  Skipping.\");\n            return;\n        }\n\n        this.clearSelections();\n\n        const drawSelection = (args: any) => { this.drawSelection(args[0], args[1]); };\n        const fetchGraphics = (lyrView: FeatureLayerView) => {\n            lyrView.queryFeatures().then((graphics: FeatureSet) => {\n                // Filter to the ones that are selected, and draw the selection graphics for them.\n                const selectedGraphics = graphics.features\n                    .filter((graphic: Graphic) => graphic.attributes[this._selectionColumnName] === 1);\n                drawSelection([selectedGraphics, lyrView]);\n            });\n        };\n\n        view.whenLayerView(sasLayer).then((lyrView: FeatureLayerView) => {\n            if (!lyrView.updating) {\n                fetchGraphics(lyrView);\n            } else {\n                const watcher = lyrView.watch(\"updating\", (isUpdating: boolean) => {\n                    // Wait for the layer view to finish updating.\n                    if (!isUpdating) {\n                        fetchGraphics(lyrView);\n                        watcher.remove();\n                    }\n                });\n            }\n        }, (reason: any) => { ProviderUtil.logError(reason); });\n\n    }\n\n    private getMapView(): View {\n        return this._mapView;\n    }\n\n    /**\n     * Processes selection actions made on the map by the user.\n     */\n    private onSelection(graphic: any): void {\n\n        const isSasFeature = (graphic && graphic.layer && graphic.layer.id === this._sasFeatureLayerId);\n\n        // (1) Communicate selection to containing report in VA.\n\n        const id = (isSasFeature && graphic && graphic.attributes) ? graphic.attributes[ProviderUtil.FIELD_NAME_OBJECT_ID] : null;\n        const selections = (id === null) ? [] : [{ row: id }];\n        ProviderUtil.publishMessage({\n            resultName: this._dataResultName,\n            selections\n        });\n\n        // (2) Clear any old selection visuals.\n\n        this.clearSelections();\n\n        // (3) Show selection on Map.\n\n        // Only 2D requires custom work.  3D is managed automatically by API (highlight).\n        if (isSasFeature) {\n            this.drawSelection(graphic);\n        }\n\n    }\n\n    private clearSelections(): void {\n        this.clearHighlights();\n    }\n\n    private drawSelection(graphics: any, layerView?: FeatureLayerView): void {\n        if (!graphics) { return; }\n        graphics = (Array.isArray(graphics)) ? graphics : [graphics];\n        this.drawHighlights(graphics, layerView);\n    }\n\n    private clearHighlights(): void {\n        if (this._highlights) {\n            this._highlights.remove();\n            this._highlights = null;\n        }\n    }\n\n    private drawHighlights(graphics: Graphic[], layerView?: FeatureLayerView): void {\n        this.clearHighlights();\n        if (layerView && graphics && graphics.length > 0) {\n            this._highlights = layerView.highlight(graphics);\n        }\n    }\n\n}\nexport default SelectionHelper;","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\n\nclass VAOptions {\n\n    static postOptions(resultName: string) {\n        ProviderUtil.publishMessage({\n            resultName,\n            optionsConfig: VAOptions.getOptions()\n        });\n    }\n\n    private static _options: any = null;\n\n    protected static getOptions(): any {\n        if (!VAOptions._options) {\n            VAOptions._options = VAOptions.buildOptions();\n        }\n        return VAOptions._options;\n    }\n\n    private static buildOptions(): any {\n\n        const R = (resourceId: string): string => {\n            return ProviderUtil.getResource(resourceId);\n        };\n\n        return {\n            // name: \"geowebmapOptions\",\n            version: 1,\n            urlOption: true,\n            label: R(\"vaoptions_label\"),\n            groups: [\n                {\n                    // name: \"webmapSettings\",\n                    label: R(\"vaoptions_webmap_label\"),\n                    fields: [\n                        {\n                            name: \"portalItemId\",\n                            label: R(\"vaoptions_portalItemId_label\"),\n                            tooltip: R(\"vaoptions_portalItemId_help\"),\n                            type: \"String\",\n                        }, {\n                            name: \"basemap\",\n                            label: R(\"vaoptions_basemap_label\"),\n                            tooltip: R(\"vaoptions_basemap_help\"),\n                            value: \" \",\n                            dataProvider: [\n                                { key: \"topo\", text: R(\"vaoptions_basemap_topo\") },\n                                { key: \"streets\", text: R(\"vaoptions_basemap_streets\") },\n                                { key: \"satellite\", text: R(\"vaoptions_basemap_satellite\") },\n                                { key: \"hybrid\", text: R(\"vaoptions_basemap_hybrid\") },\n                                { key: \"dark-gray\", text: R(\"vaoptions_basemap_dark_gray\") },\n                                { key: \"gray\", text: R(\"vaoptions_basemap_gray\") },\n                                { key: \"national-geographic\", text: R(\"vaoptions_basemap_national_geographic\") },\n                                { key: \"oceans\", text: R(\"vaoptions_basemap_oceans\") },\n                                { key: \" \", text: R(\"vaoptions_basemap_osm\") }, // \"osm\" or, since it's the default, \" \".  An empty string is not accepted by the form control.\n                                { key: \"terrain\", text: R(\"vaoptions_basemap_terrain\") },\n                                { key: \"dark-gray-vector\", text: R(\"vaoptions_basemap_dark_gray_vector\") },\n                                { key: \"gray-vector\", text: R(\"vaoptions_basemap_gray_vector\") },\n                                { key: \"streets-vector\", text: R(\"vaoptions_basemap_streets_vector\") },\n                                { key: \"streets-night-vector\", text: R(\"vaoptions_basemap_streets_night_vector\") },\n                                { key: \"streets-navigation-vector\", text: R(\"vaoptions_basemap_streets_navigation_vector\") },\n                                { key: \"topo-vector\", text: R(\"vaoptions_basemap_topo_vector\") },\n                                { key: \"streets-relief-vector\", text: R(\"vaoptions_basemap_streets_relief_vector\") }\n                            ]\n                        },\n                        {\n                            name: \"use3D\",\n                            label: R(\"vaoptions_use3D_label\"),\n                            tooltip: R(\"vaoptions_use3D_help\"),\n                            type: \"Boolean\",\n                        },\n                        // {\n                        //     name: \"portalToken\",\n                        //     label: R(\"vaoptions_portalToken_label\"),\n                        //     tooltip: R(\"vaoptions_portalToken_help\"),\n                        //     type: \"String\",\n                        // },\n                        {\n                            name: \"portalUrl\",\n                            label: R(\"vaoptions_portalUrl_label\"),\n                            tooltip: R(\"vaoptions_portalUrl_help\"),\n                            placeholder: R(\"vaoptions_portalUrl_placeholder\"),\n                            type: \"String\",\n                        },\n                    ]\n                },\n                {\n                    // name: \"sasLayer\",\n                    label: R(\"vaoptions_vaLayer_label\"),\n                    fields: [\n                        {\n                            name: \"title\",\n                            label: R(\"vaoptions_title_label\"),\n                            tooltip: R(\"vaoptions_title_help\"),\n                            type: \"String\",\n                            placeholder: R(\"vaoptions_title_placeholder\"),\n                        },\n                        {\n                            name: \"visualizationType\",\n                            label: R(\"vaoptions_visualizationType_label\"),\n                            tooltip: R(\"vaoptions_visualizationType_help\"),\n                            value: ProviderUtil.VISUALIZATION_TYPE_NONE,\n                            dataProvider: [\n                                { key: ProviderUtil.VISUALIZATION_TYPE_NONE, text: R(\"vaoptions_visualizationType_none\") },\n                                { key: \"scatter\", text: R(\"vaoptions_visualizationType_scatter\") },\n                                { key: \"bubble\", text: R(\"vaoptions_visualizationType_bubble\") },\n                                { key: \"choropleth\", text: R(\"vaoptions_visualizationType_choropleth\") },\n                                { key: \"filtered\", text: R(\"vaoptions_visualizationType_filtered\") }\n                            ]\n                        },\n                        {\n                            name: \"x\",\n                            label: R(\"vaoptions_x_label\"),\n                            tooltip: R(\"vaoptions_x_help\"),\n                            type: \"String\",\n                            placeholder: R(\"vaoptions_x_placeholder\"),\n                        },\n                        {\n                            name: \"y\",\n                            label: R(\"vaoptions_y_label\"),\n                            tooltip: R(\"vaoptions_y_help\"),\n                            type: \"String\",\n                            placeholder: R(\"vaoptions_y_placeholder\"),\n                        },\n                        {\n                            name: \"size\",\n                            label: R(\"vaoptions_size_label\"),\n                            tooltip: R(\"vaoptions_size_help\"),\n                            type: \"String\",\n                            placeholder: R(\"vaoptions_size_placeholder\"),\n                        },\n                        {\n                            name: \"color\",\n                            label: R(\"vaoptions_color_label\"),\n                            tooltip: R(\"vaoptions_color_help\"),\n                            type: \"String\",\n                            placeholder: R(\"vaoptions_color_placeholder\"),\n                        },\n                        {\n                            name: \"geoId\",\n                            label: R(\"vaoptions_geoId_label\"),\n                            tooltip: R(\"vaoptions_geoId_help\"),\n                            placeholder: R(\"vaoptions_geoId_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"featureServiceUrl\",\n                            label: R(\"vaoptions_featureServiceUrl_label\"),\n                            tooltip: R(\"vaoptions_featureServiceUrl_help\"),\n                            placeholder: R(\"vaoptions_featureServiceUrl_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"featureServiceGeoId\",\n                            label: R(\"vaoptions_featureServiceGeoId_label\"),\n                            tooltip: R(\"vaoptions_featureServiceGeoId_help\"),\n                            placeholder: R(\"vaoptions_featureServiceGeoId_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"featureServiceWhere\",\n                            label: R(\"vaoptions_featureServiceWhere_label\"),\n                            tooltip: R(\"vaoptions_featureServiceWhere_help\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"featureServiceMaxAllowableOffset\",\n                            label: R(\"vaoptions_featureServiceMaxAllowableOffset_label\"),\n                            tooltip: R(\"vaoptions_featureServiceMaxAllowableOffset_help\"),\n                            type: \"Number\",\n                        },\n                        {\n                            name: \"animation\",\n                            label: R(\"vaoptions_animation_label\"),\n                            tooltip: R(\"vaoptions_animation_help\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"period\",\n                            label: R(\"vaoptions_period_label\"),\n                            tooltip: R(\"vaoptions_period_help\"),\n                            placeholder: R(\"vaoptions_period_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"colorMin\",\n                            label: R(\"vaoptions_colorMin_label\"),\n                            tooltip: R(\"vaoptions_colorMin_help\"),\n                            placeholder: R(\"vaoptions_colorMin_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"colorMax\",\n                            label: R(\"vaoptions_colorMax_label\"),\n                            tooltip: R(\"vaoptions_colorMax_help\"),\n                            placeholder: R(\"vaoptions_colorMax_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"outline\",\n                            label: R(\"vaoptions_outline_label\"),\n                            tooltip: R(\"vaoptions_outline_help\"),\n                            placeholder: R(\"vaoptions_outline_placeholder\"),\n                            type: \"String\",\n                        },\n                        {\n                            name: \"zIndex\",\n                            label: R(\"vaoptions_zIndex_label\"),\n                            tooltip: R(\"vaoptions_zIndex_help\"),\n                            type: \"Integer\",\n                            placeholder: R(\"vaoptions_zIndex_placeholder\"),\n                            constraints: { min: 0 }\n                        },\n                    ],\n                },\n            ]\n        };\n    }\n}\n\nexport default VAOptions;\n","/*\nCopyright 2018 SAS Institute Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport Expand from \"@arcgis/core/widgets/Expand\";\nimport Legend from \"@arcgis/core/widgets/Legend\";\nimport AnimationHelper from \"sas/ArcGISWebMapProvider/AnimationHelper\";\nimport Error from \"sas/ArcGISWebMapProvider/Error\";\nimport BaseLayerBuilder from \"sas/ArcGISWebMapProvider/layerBuilder/BaseLayerBuilder\";\nimport FeatureLayerFactory from \"sas/ArcGISWebMapProvider/layerBuilder/FeatureLayerFactory\";\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\nimport SelectionHelper from \"sas/ArcGISWebMapProvider/SelectionHelper\";\nimport SmartLegendHelper from \"sas/ArcGISWebMapProvider/SmartLegendHelper\";\nimport VAOptions from \"sas/ArcGISWebMapProvider/VAOptions\";\n\n/**\n * Responsible for consuming incoming data from SAS Visual Analytics to create a \n * feature layer in a web map.\n */\nclass ArcGISVisualizationBridge {\n\n    private _options: any;\n    private _mapView: MapView | SceneView;\n    private _sasLegend: Legend;\n    private _animationHelper: AnimationHelper;\n    private _selectionHelper: SelectionHelper;\n    private _smartLegendHelper: SmartLegendHelper;\n    private _lastMessageReceivedBeforeMapViewRegistered: object | null;\n    /* Allows automatically fitting extent to data unless user manually panned. */\n    private _hasUserPanned = false;\n    private _warningControl: Expand;\n    private _warning: string;\n    private _dataResultName: string;\n\n    constructor(visualizationOptions: any) {\n\n        this._selectionHelper = new SelectionHelper();\n\n        // Initialize options.\n\n        this._options = visualizationOptions;\n\n        this._options.visualizationType = (this._options.visualizationType) ? this._options.visualizationType.toUpperCase() : null;\n        if (this._options.visualizationType !== ProviderUtil.VISUALIZATION_TYPE_SCATTER &&\n            this._options.visualizationType !== ProviderUtil.VISUALIZATION_TYPE_BUBBLE &&\n            this._options.visualizationType !== ProviderUtil.VISUALIZATION_TYPE_CHOROPLETH &&\n            this._options.visualizationType !== ProviderUtil.VISUALIZATION_TYPE_FILTERED &&\n            this._options.visualizationType !== ProviderUtil.VISUALIZATION_TYPE_NONE) {\n            if (this._options.geoId) {\n                this._options.visualizationType = ProviderUtil.VISUALIZATION_TYPE_CHOROPLETH;\n            }\n            else if (this._options.size) {\n                this._options.visualizationType = ProviderUtil.VISUALIZATION_TYPE_BUBBLE;\n            }\n            else {\n                this._options.visualizationType = ProviderUtil.VISUALIZATION_TYPE_SCATTER;\n            }\n        }\n\n        this._options.x = this._options.x || \"Longitude\";\n        this._options.y = this._options.y || \"Latitude\";\n\n        if (this._options.colorMin === undefined || this._options.colorMin === null) {\n            this._options.colorMin = \"#bfe4e7\";\n        } // Or a named color, e.g., \"blue\".\n        if (this._options.colorMax === undefined || this._options.colorMax === null) {\n            this._options.colorMax = \"#00929f\";\n        }\n        if (this._options.outline === undefined || this._options.outline === null) {\n            this._options.outline = \"#007E88\";\n        }\n\n        this._options.useSampleData = (this._options.useSampleData && this._options.useSampleData.toUpperCase() === \"TRUE\");\n\n        this._options.useSmartLegends = (this._options.useSmartLegends && this._options.useSmartLegends.toUpperCase() === \"TRUE\");\n\n        if (this._options.featureServiceWhere && this._options.featureServiceWhere.length < 1) {\n            this._options.featureServiceWhere = null;\n        }\n\n        this._options.zIndex = Math.max(parseInt(this._options.zIndex, undefined), 0); // Resolves to NaN or a whole number.\n        this._options.featureServiceMaxAllowableOffset = parseFloat(this._options.featureServiceMaxAllowableOffset);\n        this._options.featuresMax = parseInt(this._options.featuresMax, undefined);\n        this._options.filterToFeatureServiceGeoId = (this._options.filterToFeatureServiceGeoId && this._options.filterToFeatureServiceGeoId.toUpperCase() === \"TRUE\");\n\n        // If not using sample data, listen for data-driven content.\n\n        if (!this._options.useSampleData) {\n            window.addEventListener(\"message\", (msg) => this.onMessage(msg));\n        }\n\n        // Other tasks.\n\n        if (this._options.animation) {\n            this._animationHelper = new AnimationHelper(this._options.period);\n        }\n\n        if (this._options.useSmartLegends) {\n            this._smartLegendHelper = new SmartLegendHelper();\n        }\n\n    }\n\n    registerMapView(mapView: MapView | SceneView): void {\n\n        this._mapView = mapView;\n\n        this._options.title = this._options.title || ProviderUtil.getResource(\"defaultLayerTitle\");\n\n        if (this._options.showBasemapSelector) {\n            this._mapView.map.watch(\"basemap\", (newValue, oldValue /*, property, object */): void => {\n                ProviderUtil.publishPropertyChange(this._dataResultName, \"basemap\", (newValue) ? newValue.title : \"\", (oldValue) ? oldValue.title : \"\");\n            });\n        }\n\n        if (this._options.visualizationType !== ProviderUtil.VISUALIZATION_TYPE_SCATTER || this._options.color) {\n            this._sasLegend = new Legend({\n                view: this._mapView,\n                container: document.createElement(\"div\")\n            });\n            const legendExpand: Expand = new Expand({\n                expandIconClass: \"esri-icon-question\",\n                view: this._mapView,\n                content: this._sasLegend,\n                group: \"bottom-left\"\n            });\n            this._mapView.ui.add(legendExpand, \"bottom-left\");\n        }\n\n        // If using sample data, load it.\n\n        if (this._options.useSampleData) {\n            import(\"sas/ArcGISWebMapProvider/SampleData.json\").then((result) => {\n                if (this._options.useSampleData && this._options.animation) {\n                    this._animationHelper.generateSampleAnimationData(result, this._options.color, this._options.size, this._options.animation);\n                }\n                this.onMessage({\n                    data: result,\n                    origin: window.location.origin\n                });\n            },\n                (error) => {\n                    ProviderUtil.logError(error);\n                });\n\n            // Else if data has already arrived, load it.\n\n        } else if (this._lastMessageReceivedBeforeMapViewRegistered) {\n            this.onMessage(this._lastMessageReceivedBeforeMapViewRegistered);\n            this._lastMessageReceivedBeforeMapViewRegistered = null;\n        }\n\n        (this._mapView as any).on(\"drag\", (/* e: any */) => {\n            this._hasUserPanned = true;\n        });\n\n        if (this._options.use3D) {\n            (this._mapView as any).highlightOptions.color = this._options.outline;\n        }\n\n        this._selectionHelper.registerMapView(this._mapView, ProviderUtil.SAS_FEATURE_LAYER_ID);\n\n    }\n\n    private getMapView(): MapView | SceneView {\n        return this._mapView;\n    }\n\n    private onMessage(event: any): void {\n        if (!this.getMapView() && this.isVAMessage(event)) {\n            this._lastMessageReceivedBeforeMapViewRegistered = event;\n        }\n        else {\n            this.processMessageEvent(event);\n        }\n    }\n\n    private isVAMessage(event: any): boolean {\n        return event && event.data && event.data.columns && event.data.data;\n    }\n\n    /**\n     * Builds a SAS feature layer from the incoming data.\n     */\n    private processMessageEvent(event: any): void {\n        if (this.isVAMessage(event)) {\n\n            this._dataResultName = event.data.resultName;\n            this.setWarning(null);\n\n            VAOptions.postOptions(this._dataResultName);\n\n            if (this._options.visualizationType === ProviderUtil.VISUALIZATION_TYPE_NONE || !this.validateOptions() || !this.validateFeaturesMax(event.data.data, this._options.featuresMax)) {\n                this.removeSasLayer();\n                return;\n            }\n\n            this._selectionHelper.registerMapData(\n                this._dataResultName, // Identifier for incoming data set.\n                ProviderUtil.getNameWithUsage(\"brush\", event.data.columns) // Name of column with selection brushing boolean.\n            );\n\n            this.purgeSasIdiom(event.data.data, event.data.columns);\n            this.convertDates(event.data.data, event.data.columns);\n\n            if (this._options.animation) {\n                this._animationHelper.initializeAnimationData(event, this._options.animation);\n            }\n\n            const builder: BaseLayerBuilder = FeatureLayerFactory.getInstance().createLayerBuilder(this._options, event.data.data, event.data.columns);\n\n            builder.buildFeatureLayer().then((layer: FeatureLayer) => {\n\n                this.addOrReplaceSasLayer(layer);\n\n                if (!builder.supportsEdits()) {\n                    this.appendWarning(builder.validateResults());\n                }\n                else {\n                    layer.when((sasLayerReadied: any) => {\n                        const editsCompleted = sasLayerReadied.on(BaseLayerBuilder.EDITS_COMPLETED, () => {\n                            this.appendWarning(builder.validateResults());\n                            this._selectionHelper.applySelectionsFromData(sasLayerReadied);\n                            editsCompleted.remove();\n                        });\n                    });\n                }\n\n                if (this._options.filterToFeatureServiceGeoId) {\n                    const whereClause = builder.getGeoIdFilter();\n                    if (whereClause && whereClause.length > 0) {\n                        this.applyFilterToAllLayersWithGeoIDs(whereClause);\n                    }\n                }\n\n            }, (e: any) => {\n                ProviderUtil.logError(e);\n            });\n\n        }\n    }\n\n    private addOrReplaceSasLayer(sasLayer: FeatureLayer): void {\n\n        const view = this.getMapView();\n        const map = (view) ? view.map : null;\n\n        if (map) {\n\n            const oldLayer = map.findLayerById(ProviderUtil.SAS_FEATURE_LAYER_ID);\n            if (oldLayer) {\n                map.remove(oldLayer);\n            }\n\n            if (isNaN(this._options.zIndex)) {\n                map.add(sasLayer);\n            }\n            else {\n                map.add(sasLayer, this._options.zIndex);\n            }\n\n            sasLayer.when((sasLayerReadied: any) => {\n\n                this._selectionHelper.applySelectionsFromData(sasLayerReadied);\n\n                // Automatically update the extent in response to data changes\n                // unless the user has manually panned the view.\n                // TODO: VA has a \"Reset Zoom\" feature that would move the extent\n                // back to the last goTo (see the Home widget) and that would\n                // essentially reset _hasUserPanned to false.\n                if (!this._hasUserPanned || this._options.visualizationType === ProviderUtil.VISUALIZATION_TYPE_CHOROPLETH) {\n                    this.goToDataExtent(sasLayerReadied);\n                }\n\n                if (this._options.animation) {\n                    this._animationHelper.initializeAnimation(sasLayerReadied);\n                }\n\n                sasLayerReadied.layerEnabled = false; // (this._sasLegend);\n                if (this._sasLegend) {\n                    sasLayerReadied.layerInfos = [{\n                        layer: sasLayerReadied,\n                        title: this._options.title\n                    }];\n                }\n\n                if (this._options.useSmartLegends) {\n                    this._smartLegendHelper.addSmartLegends(sasLayerReadied, this.getMapView());\n                }\n\n            }, (e: any) => {\n                ProviderUtil.logError(e);\n            });\n\n        }\n    }\n\n    private removeSasLayer(): void {\n\n        const view = this.getMapView();\n        const map = (view) ? view.map : null;\n\n        if (map) {\n\n            const oldLayer = map.findLayerById(ProviderUtil.SAS_FEATURE_LAYER_ID);\n            if (oldLayer) {\n                map.remove(oldLayer);\n            }\n\n        }\n    }\n\n    private purgeSasIdiom(rows: any[], columns: any[]): void {\n\n        let i: number;\n        let j: number;\n        const numericColumnIndicies: number[] = [];\n        for (i = 0; i < columns.length; ++i) {\n            if (columns[i].type.toUpperCase() !== \"STRING\") {\n                numericColumnIndicies.push(i);\n            }\n        }\n        for (i = 0; i < rows.length; ++i) {\n            for (j = 0; j < numericColumnIndicies.length; ++j) {\n                if (rows[i][numericColumnIndicies[j]] === \".\") {\n                    rows[i][numericColumnIndicies[j]] = null;\n                }\n            }\n        }\n\n    }\n\n    private convertDates(rows: any[], columns: any[]): void {\n\n        let i: number;\n        let j: number;\n        const dateColumnIndices: number[] = [];\n        for (i = 0; i < columns.length; ++i) {\n            if (columns[i].type === \"date\" && columns[i].format && columns[i].format.name.toUpperCase() === \"DATE\") {\n                dateColumnIndices.push(i);\n            }\n        }\n        for (i = 0; i < rows.length; ++i) {\n            for (j = 0; j < dateColumnIndices.length; ++j) {\n                rows[i][dateColumnIndices[j]] = ProviderUtil.convertToEpochMS(rows[i][dateColumnIndices[j]], columns[dateColumnIndices[j]].format.formatString);\n            }\n        }\n\n    }\n\n    /** \n     * We may not keep \"filterToFeatureServiceGeoId\", since the use case is narrow.\n     * When a single region is being displayed, the feature will filter\n     * all other FeatureLayers in the map by the value of that region\n     * if those FeatureLayers have an attribute matching the featureServiceGeoId.\n     * So you display only the single feature and anything that intersects it\n     * (by attribute, not geometry).\n     */\n    private applyFilterToAllLayersWithGeoIDs(whereClause: string | null | undefined): void {\n        if (whereClause && whereClause.length > 0) {\n            this.getMapView().map.allLayers.forEach((layer: any) => {\n\n                if (layer.type && layer.type === \"feature\" &&\n                    layer.id !== ProviderUtil.SAS_FEATURE_LAYER_ID &&\n                    layer.fields) {\n\n                    const layerHasGeoId = layer.fields.find((f: any) => {\n                        return f.name === this._options.featureServiceGeoId\n                    });\n\n                    layer.definitionExpression = (layerHasGeoId) ? whereClause : \"\";\n                }\n\n            });\n        }\n    }\n\n    private validateFeaturesMax(graphics: any[], maximum: any): boolean {\n        if (graphics.length > maximum) {\n            this.appendWarning(Error.error(\"tooManyFeatures\", graphics.length.toString(), maximum.toString()));\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    private validateOptions(): boolean {\n        const builder: BaseLayerBuilder = FeatureLayerFactory.getInstance().createLayerBuilder(this._options, [], []);\n        const warnings: Error[] = builder.validateOptions();\n        this.appendWarning(warnings);\n        return warnings.length === 0;\n    }\n\n    private getWarningControl(): Expand {\n        if (!this._warningControl) {\n            const validationDiv = document.createElement(\"div\");\n            validationDiv.setAttribute(\"class\", \"warning\");\n            this._warningControl = new Expand({\n                id: \"sasWarningControl\",\n                expandIconClass: \"esri-icon-notice-triangle\",\n                view: this._mapView,\n                content: validationDiv,\n                group: \"bottom-right\",\n                expanded: true\n            });\n        }\n        return this._warningControl;\n    }\n\n    private setWarning(warning: any): void {\n        if (this._warning !== warning) {\n            this._warning = warning;\n            this.displayWarning(this._warning);\n            // if (!warning || warning.length === 0) {\n            //    this.clearVAError();\n            // }\n        }\n    }\n\n    private getWarning(): any {\n        return this._warning;\n    }\n\n    private appendWarning(warnings: Error | Error[]): void {\n        if (!Array.isArray(warnings)) {\n            warnings = [warnings];\n        }\n        warnings.forEach((item: Error) => this.appendWarningImpl(item));\n    }\n\n    private appendWarningImpl(warning: Error): void {\n        const current = this.getWarning();\n        const cumulativeWarning = ((current && current.length > 0) ? \" \" : \"\") + warning.message\n        this.setWarning(cumulativeWarning);\n        // if (warning.severity === Severity.error) {\n        //     this.publishVAError(cumulativeWarning);\n        // }\n    }\n\n    private displayWarning(warning: any): void {\n        const control = this.getWarningControl();\n        if (warning && warning.length > 0) {\n            if (control.content && control.content instanceof Element) {\n                (control.content as Element).innerHTML = warning;\n            }\n            this._mapView.ui.add(control, \"bottom-right\");\n            ProviderUtil.logError(warning);\n        } else {\n            this._mapView.ui.remove(control);\n        }\n    }\n\n    // private publishVAError(message:string|null):void {\n    //     ProviderUtil.publishMessage({\n    //         resultName: this._dataResultName,\n    //         message\n    //     });\n    // }\n\n    // private clearVAError():void {\n    //     this.publishVAError(null);\n    // }\n\n    /**\n     * Adapted from ArcGIS examples.\n     */\n    private goToDataExtent(sasLayer: FeatureLayer): void {\n        if (sasLayer.fullExtent) {\n            (this.getMapView() as any).goTo(sasLayer.fullExtent, { animate: false });\n        }\n        else {\n            this.forDataExtent(sasLayer, (results: any) => {\n                (this.getMapView() as any).goTo(results.extent, {\n                    animate: false\n                }); // go to the extent of all the graphics in the layer view\n            });\n        }\n    }\n\n    private forDataExtent(sasLayer: FeatureLayer, queryExtentResultsHandler: any): void {\n        const goToLayer = (layer: any) => {\n            layer.queryExtent().then((results: any) => {\n                queryExtentResultsHandler(results);\n            });\n        };\n        const view = this.getMapView();\n        view.whenLayerView(sasLayer).then((lyrView: any) => {\n            if (!lyrView.updating) {\n                goToLayer(lyrView);\n            } else {\n                const watcher = lyrView.watch(\"updating\", (isUpdating: boolean) => {\n                    if (!isUpdating) { // wait for the layer view to finish updating\n                        watcher.remove();\n                        goToLayer(lyrView);\n                    }\n                });\n            }\n        });\n    }\n\n}\n\nexport default ArcGISVisualizationBridge;","import esriConfig from \"@arcgis/core/config\";\nimport { resolve } from \"@arcgis/core/core/promiseUtils\";\nimport * as urlUtils from \"@arcgis/core/core/urlUtils\";\nimport IdentityManager from \"@arcgis/core/identity/IdentityManager\";\nimport Map from \"@arcgis/core/Map\";\nimport PortalItem from \"@arcgis/core/portal/PortalItem\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport View from \"@arcgis/core/views/View\";\nimport WebMap from \"@arcgis/core/WebMap\";\nimport WebScene from \"@arcgis/core/WebScene\";\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\";\nimport Expand from \"@arcgis/core/widgets/Expand\";\nimport LayerList from \"@arcgis/core/widgets/LayerList\";\nimport Search from \"@arcgis/core/widgets/Search\";\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport ArcGISVisualizationBridge from 'sas/ArcGISWebMapProvider/ArcGISVisualizationBridge';\nimport ProviderUtil from \"sas/ArcGISWebMapProvider/ProviderUtil\";\nimport { initializeI18N } from \"sas/i18n/resources\";\nimport \"./Geowebmap.css\";\n\ninterface GeowebmapState {\n    urlOptions: any;\n    mapDiv: React.RefObject<HTMLDivElement>;\n}\nclass Geowebmap extends React.Component<{}, GeowebmapState> {\n\n    private static readonly CSS = {\n        base: \"main\",\n        webmap: \"webmap\",\n        webmapAnimated: \"webmap-animating\",\n        animationControls: \"animationControls\",\n        animationControlsAnimated: \"animationControls-animating\"\n    };\n\n    private _visualizationBridge: ArcGISVisualizationBridge;\n    private _map: Map;\n    private _view: View;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            urlOptions: this.getOptionsFromUrl(),\n            mapDiv: React.createRef()\n        };\n    }\n\n    private get urlOptions(): any {\n        return (this.state) ? this.state.urlOptions : null;\n    }\n\n    render() {\n\n        const dynamicClassesWebmap = {\n            [Geowebmap.CSS.webmapAnimated]: this.state.urlOptions.animation\n        };\n        const dynamicClassesAnimationControls = {\n            [Geowebmap.CSS.animationControlsAnimated]: this.state.urlOptions.animation\n        }\n\n        return <div className={Geowebmap.CSS.base}>\n            <div ref={this.state.mapDiv} className={classnames(Geowebmap.CSS.webmap, dynamicClassesWebmap)} />\n            <footer id=\"animationControls\" className={classnames(Geowebmap.CSS.animationControls, dynamicClassesAnimationControls)}>\n                <div id=\"animationLabel\"></div>\n                <input id=\"animationPlayButton\" type=\"button\" value=\">>\" readOnly />\n                <input id=\"animationSlider\" type=\"range\" min=\"0\" max=\"100\" step=\"0.001\" defaultValue=\"0\" style={{ width: \"100%\" }} />\n            </footer>\n        </div>;\n\n    }\n\n    componentDidMount() {\n\n        if (!this.state.mapDiv.current)\n            return;\n\n        this._visualizationBridge = new ArcGISVisualizationBridge(this.urlOptions);\n\n        this.afterMount(this.state.mapDiv.current);\n\n    }\n\n    private getOptionsFromUrl(): any {\n        const url = urlUtils.urlToObject(window.location.href);\n        const _options = url.query || {};\n        _options.basemap = _options.basemap || \"osm\";\n        _options.use3D = (_options.use3D && _options.use3D.toUpperCase() === \"TRUE\");\n        _options.useWebScene = false;\n        _options.showBasemapSelector = (_options.showBasemapSelector === undefined || _options.showBasemapSelector === null || _options.showBasemapSelector.toUpperCase() === \"TRUE\");\n        return _options;\n    }\n\n    private getPortalUrl(options: any): string {\n        return (options.portalUrl) ? options.portalUrl : ProviderUtil.DEFAULT_PORTAL_URL;\n    }\n\n    private afterMount(element: HTMLDivElement) {\n\n        if (this.urlOptions.portalUrl) {\n            esriConfig.portalUrl = this.urlOptions.portalUrl;\n        }\n\n        if (this.urlOptions.portalToken) {\n            IdentityManager.registerToken({\n                token: this.urlOptions.portalToken,\n                server: this.getPortalUrl(this.urlOptions)\n            });\n            this.loadUI(element);\n        }\n        // The following branch is useful for testing, but not \n        // recommended for deployment.  Commented out.\n        // else if (options.username && options.password) {\n        //   const server = this.getPortalUrl(options);\n        //   IdentityManager.checkSignInStatus(server).then((success)=>{\n        //     this.buildMap(element, options, visualizationBridge, map);\n        //   },(failure)=>{\n        //     const serverInfo = IdentityManager.findServerInfo(server);\n        //     IdentityManager.generateToken(\n        //         serverInfo,\n        //         {\n        //             username: options.username,\n        //             password: options.password\n        //         } \n        //     ).then((token: any) => {\n        //         if (token && !token.server) {\n        //             token.server = serverInfo.server; \n        //         } \n        //         IdentityManager.registerToken(token); \n        //         this.loadUI(element, options, visualizationBridge, map); \n        //     }, (error) => {\n        //       ProviderUtil.logError(error);\n        //     }); \n        //   });\n        // }\n        else {\n            this.loadUI(element);\n        }\n\n    }\n\n    private loadPortalItem(portalItemId?: string, portalUrl?: string): IPromise<PortalItem | null> {\n\n        if (portalItemId) {\n            return new PortalItem({\n                id: portalItemId,\n                url: (portalUrl) ? portalUrl : undefined\n            }).load();\n        }\n        else {\n            return resolve(null);\n        }\n\n    }\n\n    private loadUI(element: HTMLDivElement) {\n        // Ensure that localized resources are loaded before processing UI.\n        const m = () => { this.buildMap(element); };\n        initializeI18N().then(m, m);\n    }\n\n    private buildMap(element: HTMLDivElement) {\n\n        this.loadPortalItem(this.urlOptions.portalItemId, this.urlOptions.portalUrl).then(\n\n            (portalItem: PortalItem | null) => {\n\n                if (portalItem && (portalItem.type === \"Web Scene\" || portalItem.type === \"CityEngine Web Scene\")) {\n                    this.urlOptions.useWebScene = true;\n                    this._map = new WebScene({ portalItem });\n                } else if (portalItem) {\n                    this._map = new WebMap({ portalItem });\n                } else {\n                    this._map = new Map({\n                        basemap: this.urlOptions.basemap,\n                        // ground: \"world-elevation\" // May no longer need.\n                    });\n                }\n\n                this.buildMapView(element);\n\n            },\n\n            (error: any) => { ProviderUtil.logError(error); }\n\n        );\n\n    }\n\n    private buildMapView(element: HTMLDivElement) {\n\n        if (this.urlOptions.use3D || this._map instanceof WebScene) {\n            this._view = new SceneView({\n                map: this._map,\n                container: element // Bound to Html.\n            });\n        }\n        else {\n            this._view = new MapView({\n                map: this._map,\n                container: element // Bound to Html.\n            });\n        }\n\n        this._view.when((view: View) => {\n            this.addMapWidgets(view as MapView || view as SceneView);\n            this._visualizationBridge.registerMapView(view as MapView || view as SceneView);\n        }, (error: any) => {\n            ProviderUtil.logError(error);\n        });\n\n    }\n\n    private addMapWidgets(view: MapView | SceneView) {\n\n        const layerList = new LayerList({ view: view });\n        const layerListExpand = new Expand({ expandIconClass: \"esri-icon-layer-list\", view: view, content: layerList, group: \"top-right\" });\n        view.ui.add(layerListExpand, \"top-right\");\n\n        if (this.state.urlOptions.showBasemapSelector) {\n            const basemapGallery = new BasemapGallery({ view: view });\n            const basemapExpand = new Expand({ expandIconClass: \"esri-icon-basemap\", view: view, content: basemapGallery, group: \"top-right\" });\n            view.ui.add(basemapExpand, \"top-right\");\n        }\n\n        view.ui.move(\"zoom\", \"top-right\");\n        view.ui.move(\"navigation-toggle\", \"top-right\");\n        view.ui.move(\"compass\", \"top-right\");\n\n        const search = new Search({ view, container: document.createElement(\"div\") });\n        const searchExpand = new Expand({ expandIconClass: \"esri-icon-search\", view: view, content: search });\n        view.ui.add(searchExpand, \"top-left\");\n\n    }\n\n}\n\nexport default Geowebmap;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import esriConfig from \"@arcgis/core/config.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Geowebmap from './Geowebmap';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n/* ASSET SOURCE: The following line loads style assets locally.  To load them from \n * arcgis.com instead, remove it, and alter Geowebmap.css to import styles\n * from arcgis.com. \n */\nesriConfig.assetsPath = \"./assets\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Geowebmap />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}