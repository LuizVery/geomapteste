"use strict";(globalThis.webpackChunkgeowebmap=globalThis.webpackChunkgeowebmap||[]).push([[322],{80322:(e,s,t)=>{t.r(s),t.d(s,{I3STreeDebugger:()=>u});var l=t(27366),i=(t(59486),t(92026)),o=t(49861),r=(t(63780),t(93169),t(25243),t(69912)),a=t(14226),n=t(81949),h=t(11186),p=t(71353),c=t(79803),b=t(87287),g=t(80885);let u=class extends b.q{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),s=this.view.renderSpatialReference,t=this.nodeSR;return e.map((e=>function(e,s,t){const l=e.serviceObb;if((0,i.Wi)(l)||(0,i.Wi)(s))return null;(0,a.k)(y,l.quaternion),(0,h.g)(d,l.center),(0,c.CM)(d,t,0,d,s,0,1),y[12]=d[0],y[13]=d[1],y[14]=d[2];const o=[[],[],[]];(0,h.g)(d,l.halfSize),(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[0].push([d[0],d[1]]),(0,h.g)(d,l.halfSize),d[0]=-d[0],(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[0].push([d[0],d[1]]),(0,h.g)(d,l.halfSize),d[0]=-d[0],d[1]=-d[1],(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[0].push([d[0],d[1]]),(0,h.g)(d,l.halfSize),d[1]=-d[1],(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[0].push([d[0],d[1]]),o[1].push(o[0][0]),o[1].push(o[0][1]),(0,h.g)(d,l.halfSize),d[0]=-d[0],d[2]=-d[2],(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[1].push([d[0],d[1]]),(0,h.g)(d,l.halfSize),d[2]=-d[2],(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[1].push([d[0],d[1]]),o[2].push(o[0][0]),o[2].push(o[0][3]),(0,h.g)(d,l.halfSize),d[1]=-d[1],d[2]=-d[2],(0,h.m)(d,d,y),(0,c.CM)(d,s,0,d,t,0,1),o[2].push([d[0],d[1]]),o[2].push(o[1][3]);const r=new g.Z({rings:o,spatialReference:t});return{lij:[e.level,e.childCount,0],label:e.id,geometry:r}}(e,s,t))).sort(((e,s)=>e.lij[0]===s.lij[0]?e.label>s.label?-1:1:e.lij[0]-s.lij[0]))}};(0,l._)([(0,o.Cb)({constructOnly:!0})],u.prototype,"lv",void 0),(0,l._)([(0,o.Cb)({constructOnly:!0})],u.prototype,"nodeSR",void 0),u=(0,l._)([(0,r.j)("esri.views.3d.layers.support.I3STreeDebugger")],u);const y=(0,n.c)(),d=(0,p.c)()},87287:(e,s,t)=>{t.d(s,{q:()=>d});var l=t(27366),i=t(51995),o=t(52639),r=t(85015),a=t(16889),n=t(92026),h=t(49861),p=(t(63780),t(93169),t(25243),t(69912)),c=t(62554),b=t(61459),g=t(58009),u=t(87037);const y=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let d=class extends r.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=y.map((e=>new b.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),s=new Array,t=new Set((this._labels.size,this._labels.keys()));e.forEach(((l,r)=>{const h=l.lij.toString();t.delete(h);const p=l.lij[0],b=l.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new o.Z({geometry:b,symbol:this._symbols[p%this._symbols.length]});this._polygons.set(h,e),s.push(e)}if(this.enableLabels){const t=(e=>{if((0,n.pC)(e.label))return e.label;let s=e.lij.toString();return(0,n.pC)(e.loadPriority)&&(s+=` (${e.loadPriority})`),s})(l),p=r/(e.length-1),y=(0,a.t7)(0,200,p),d=(0,a.t7)(20,6,p)/.75,_=(0,n.pC)(l.loadPriority)&&l.loadPriority>=e.length,m=new i.Z([y,_?0:y,_?0:y]),w="3d"===this.view.type?()=>new c.Z({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new u.Z({text:t,halo:{color:"white",size:1/.75},material:{color:m},size:d})]}):()=>new g.Z({text:t,haloColor:"white",haloSize:1/.75,color:m,size:d});if(this._labels.has(h)){const e=this._labels.get(h),s=w();((0,n.Wi)(e.symbol)||JSON.stringify(s)!==JSON.stringify(e.symbol))&&(e.symbol=s)}else{const e=new o.Z({geometry:b.extent.center,symbol:w()});this._labels.set(h,e),s.push(e)}}}));const l=new Array;t.forEach((e=>{this._polygons.has(e)&&(l.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(l.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(l),this.view.graphics.addMany(s)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,l._)([(0,h.Cb)({constructOnly:!0})],d.prototype,"view",void 0),(0,l._)([(0,h.Cb)({readOnly:!0})],d.prototype,"updating",void 0),(0,l._)([(0,h.Cb)()],d.prototype,"enabled",null),d=(0,l._)([(0,p.j)("esri.views.support.TileTreeDebugger")],d)}}]);
//# sourceMappingURL=322.00940ea7.chunk.js.map