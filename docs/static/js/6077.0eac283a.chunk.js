"use strict";(globalThis.webpackChunkgeowebmap=globalThis.webpackChunkgeowebmap||[]).push([[6077],{76077:(e,t,s)=>{s.r(t),s.d(t,{FeatureTileTree3DDebugger:()=>p,default:()=>c});var i=s(27366),l=(s(59486),s(100)),a=s(94172),o=s(49861),r=(s(63780),s(93169),s(25243),s(69912)),n=s(87287),h=s(94854),d=s(80885);let p=class extends n.q{constructor(e){super(e),this.watchUpdatingTracking=new h.t,this.handles=new l.Z}initialize(){const{featureTiles:e}=this.view;this.handles.add(e.addClient()),this.watchUpdatingTracking.addOnCollectionChange((()=>null==e?void 0:e.tiles),(()=>this.update()),a.nn)}destroy(){this.handles&&(this.handles.destroy(),this.handles=null),this.watchUpdatingTracking.destroy()}getTiles(){const e=e=>{const[t,s,i]=e.lij;return d.Z.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(t,s,i))};return this.view.featureTiles.tiles.toArray().sort(((e,t)=>e.loadPriority-t.loadPriority)).map((t=>({...t,geometry:e(t)})))}};(0,i._)([(0,o.Cb)({readOnly:!0})],p.prototype,"watchUpdatingTracking",void 0),(0,i._)([(0,o.Cb)({readOnly:!0,aliasOf:"watchUpdatingTracking.updating"})],p.prototype,"updating",void 0),(0,i._)([(0,o.Cb)()],p.prototype,"view",void 0),p=(0,i._)([(0,r.j)("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],p);const c=p},87287:(e,t,s)=>{s.d(t,{q:()=>u});var i=s(27366),l=s(51995),a=s(52639),o=s(85015),r=s(16889),n=s(92026),h=s(49861),d=(s(63780),s(93169),s(25243),s(69912)),p=s(62554),c=s(61459),y=s(58009),g=s(87037);const b=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let u=class extends o.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=b.map((e=>new c.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),t=new Array,s=new Set((this._labels.size,this._labels.keys()));e.forEach(((i,o)=>{const h=i.lij.toString();s.delete(h);const d=i.lij[0],c=i.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new a.Z({geometry:c,symbol:this._symbols[d%this._symbols.length]});this._polygons.set(h,e),t.push(e)}if(this.enableLabels){const s=(e=>{if((0,n.pC)(e.label))return e.label;let t=e.lij.toString();return(0,n.pC)(e.loadPriority)&&(t+=` (${e.loadPriority})`),t})(i),d=o/(e.length-1),b=(0,r.t7)(0,200,d),u=(0,r.t7)(20,6,d)/.75,w=(0,n.pC)(i.loadPriority)&&i.loadPriority>=e.length,_=new l.Z([b,w?0:b,w?0:b]),v="3d"===this.view.type?()=>new p.Z({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new g.Z({text:s,halo:{color:"white",size:1/.75},material:{color:_},size:u})]}):()=>new y.Z({text:s,haloColor:"white",haloSize:1/.75,color:_,size:u});if(this._labels.has(h)){const e=this._labels.get(h),t=v();((0,n.Wi)(e.symbol)||JSON.stringify(t)!==JSON.stringify(e.symbol))&&(e.symbol=t)}else{const e=new a.Z({geometry:c.extent.center,symbol:v()});this._labels.set(h,e),t.push(e)}}}));const i=new Array;s.forEach((e=>{this._polygons.has(e)&&(i.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(i.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(i),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,i._)([(0,h.Cb)({constructOnly:!0})],u.prototype,"view",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],u.prototype,"updating",void 0),(0,i._)([(0,h.Cb)()],u.prototype,"enabled",null),u=(0,i._)([(0,d.j)("esri.views.support.TileTreeDebugger")],u)}}]);
//# sourceMappingURL=6077.0eac283a.chunk.js.map