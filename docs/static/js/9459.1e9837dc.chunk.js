"use strict";(globalThis.webpackChunkgeowebmap=globalThis.webpackChunkgeowebmap||[]).push([[9459],{49459:(e,t,r)=>{r.r(t),r.d(t,{default:()=>_e});var i=r(27366),s=r(40110),o=r(77178),a=r(10064),n=r(84652),l=r(93002),p=r(32718),d=r(92026),u=r(97642),y=r(66978),c=r(35995),h=r(49861),f=(r(25243),r(38511)),m=r(69912),v=r(78952),g=r(74184),b=r(59147),w=r(15801),S=r(27961),_=r(11936),I=r(6061),x=r(29598),C=r(56811),j=r(31614),A=r(46784),O=r(71907);r(63780),r(93169);let T=class extends A.wq{constructor(){super(...arguments),this.type=null}};(0,i._)([(0,h.Cb)({type:String,readOnly:!0,json:{write:!0}})],T.prototype,"type",void 0),T=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterAuthoringInfo")],T);const Z=T;var R;let E=R=class extends A.wq{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new R({filterType:this.filterType,filterValues:(0,n.d9)(this.filterValues)})}};(0,i._)([(0,h.Cb)({type:String,json:{write:!0}})],E.prototype,"filterType",void 0),(0,i._)([(0,h.Cb)({type:[String],json:{write:!0}})],E.prototype,"filterValues",void 0),E=R=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterAuthoringInfoType")],E);const F=E;var N;const P=s.Z.ofType(F);let L=N=class extends A.wq{clone(){return new N({filterTypes:(0,n.d9)(this.filterTypes)})}};(0,i._)([(0,h.Cb)({type:P,json:{write:!0}})],L.prototype,"filterTypes",void 0),L=N=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterAuthoringInfoBlock")],L);const U=L;var B;const q=s.Z.ofType(U);let k=B=class extends Z{constructor(){super(...arguments),this.type="checkbox"}clone(){return new B({filterBlocks:(0,n.d9)(this.filterBlocks)})}};(0,i._)([(0,h.Cb)({type:["checkbox"]})],k.prototype,"type",void 0),(0,i._)([(0,h.Cb)({type:q,json:{write:!0}})],k.prototype,"filterBlocks",void 0),k=B=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],k);const K=k;let M=class extends A.wq{};(0,i._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],M.prototype,"type",void 0),M=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterMode")],M);const V=M;var D;let $=D=class extends V{constructor(){super(...arguments),this.type="solid"}clone(){return new D}};(0,i._)([(0,h.Cb)({type:["solid"],readOnly:!0,json:{write:!0}})],$.prototype,"type",void 0),$=D=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterModeSolid")],$);const J=$;var z,H=r(27135),W=r(68901);let G=z=class extends V{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new z({edges:(0,n.d9)(this.edges)})}};(0,i._)([(0,H.J)({wireFrame:"wire-frame"})],G.prototype,"type",void 0),(0,i._)([(0,h.Cb)(W.Z)],G.prototype,"edges",void 0),G=z=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterModeWireFrame")],G);const Q=G;var X;let Y=X=class extends V{constructor(){super(...arguments),this.type="x-ray"}clone(){return new X}};(0,i._)([(0,h.Cb)({type:["x-ray"],readOnly:!0,json:{write:!0}})],Y.prototype,"type",void 0),Y=X=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterModeXRay")],Y);const ee=Y;var te;const re={nonNullable:!0,types:{key:"type",base:V,typeMap:{solid:J,"wire-frame":Q,"x-ray":ee}},json:{read:e=>{switch(e&&e.type){case"solid":return J.fromJSON(e);case"wireFrame":return Q.fromJSON(e);case"x-ray":return ee.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let ie=te=class extends A.wq{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new J,this.title=""}clone(){return new te({filterExpression:this.filterExpression,filterMode:(0,n.d9)(this.filterMode),title:this.title})}};(0,i._)([(0,h.Cb)({type:String,json:{write:{enabled:!0,isRequired:!0}}})],ie.prototype,"filterExpression",void 0),(0,i._)([(0,h.Cb)(re)],ie.prototype,"filterMode",void 0),(0,i._)([(0,h.Cb)({type:String,json:{write:{enabled:!0,isRequired:!0}}})],ie.prototype,"title",void 0),ie=te=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilterBlock")],ie);const se=ie;var oe;const ae=s.Z.ofType(se);let ne=oe=class extends A.wq{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=(0,O.D)(),this.name=null}clone(){return new oe({description:this.description,filterBlocks:(0,n.d9)(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:(0,n.d9)(this.filterAuthoringInfo)})}};(0,i._)([(0,h.Cb)({type:String,json:{write:!0}})],ne.prototype,"description",void 0),(0,i._)([(0,h.Cb)({type:ae,json:{write:{enabled:!0,isRequired:!0}}})],ne.prototype,"filterBlocks",void 0),(0,i._)([(0,h.Cb)({types:{key:"type",base:Z,typeMap:{checkbox:K}},json:{read:e=>"checkbox"===(e&&e.type)?K.fromJSON(e):null,write:!0}})],ne.prototype,"filterAuthoringInfo",void 0),(0,i._)([(0,h.Cb)({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],ne.prototype,"id",void 0),(0,i._)([(0,h.Cb)({type:String,json:{write:{enabled:!0,isRequired:!0}}})],ne.prototype,"name",void 0),ne=oe=(0,i._)([(0,m.j)("esri.layers.support.BuildingFilter")],ne);const le=ne;var pe=r(76200),de=r(54472),ue=r(67426);const ye=p.Z.getLogger("esri.layers.support.BuildingSummaryStatistics");let ce=class extends A.wq{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};(0,i._)([(0,h.Cb)({type:String})],ce.prototype,"fieldName",void 0),(0,i._)([(0,h.Cb)({type:String})],ce.prototype,"modelName",void 0),(0,i._)([(0,h.Cb)({type:String})],ce.prototype,"label",void 0),(0,i._)([(0,h.Cb)({type:Number})],ce.prototype,"min",void 0),(0,i._)([(0,h.Cb)({type:Number})],ce.prototype,"max",void 0),(0,i._)([(0,h.Cb)({json:{read:e=>Array.isArray(e)&&(e.every((e=>"string"==typeof e))||e.every((e=>"number"==typeof e)))?e.slice():null}})],ce.prototype,"mostFrequentValues",void 0),(0,i._)([(0,h.Cb)({type:[Number]})],ce.prototype,"subLayerIds",void 0),ce=(0,i._)([(0,m.j)("esri.layers.support.BuildingFieldStatistics")],ce);let he=class extends(de.Z.LoadableMixin((0,ue.v)(A.wq))){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||"loading"===this.loadStatus?this._get("fields"):(ye.error("building summary statistics are not loaded"),null)}load(e){const t=(0,d.pC)(e)?e.signal:null;return this.addResolvingPromise(this._fetchService(t)),Promise.resolve(this)}async _fetchService(e){const t=(await(0,pe.default)(this.url,{query:{f:"json"},responseType:"json",signal:e})).data;this.read(t,{origin:"service"})}};(0,i._)([(0,h.Cb)({constructOnly:!0,type:String})],he.prototype,"url",void 0),(0,i._)([(0,h.Cb)({readOnly:!0,type:[ce],json:{read:{source:"summary"}}})],he.prototype,"fields",null),he=(0,i._)([(0,m.j)("esri.layers.support.BuildingSummaryStatistics")],he);const fe=he;var me=r(45948),ve=r(34785);const ge=p.Z.getLogger("esri.layers.BuildingSceneLayer"),be=s.Z.ofType(le),we=(0,n.d9)(w.Z.sublayersProperty);we.json.origins["web-scene"]={type:[b.Z],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},we.json.origins["portal-item"]={type:[b.Z],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}};let Se=class extends((0,j.Vt)((0,_.Y)((0,I.q)((0,x.I)((0,C.M)((0,u.R)((0,S.V)(g.Z)))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new o.Z({getCollections:()=>[this.sublayers],getChildrenFunction:e=>"building-group"===e.type?e.sublayers:null}),this.sublayers=null,this.sublayerOverrides=null,this.filters=new be,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.type="building-scene"}normalizeCtorArgs(e){return"string"==typeof e?{url:e}:e}destroy(){this.allSublayers.destroy()}readSublayers(e,t,r){const i=w.Z.readSublayers(e,t,r);return w.Z.forEachSublayer(i,(e=>e.layer=this)),this.sublayerOverrides&&(this.applySublayerOverrides(i,this.sublayerOverrides),this.sublayerOverrides=null),i}applySublayerOverrides(e,t){let{overrides:r,context:i}=t;w.Z.forEachSublayer(e,(e=>e.read(r.get(e.id),i)))}readSublayerOverrides(e,t){const r=new Map;for(const i of e)null!=i&&"object"==typeof i&&"number"==typeof i.id?r.set(i.id,i):t.messages.push(new a.Z("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:i}));return{overrides:r,context:t}}writeSublayerOverrides(e,t,r){const i=[];w.Z.forEachSublayer(this.sublayers,(e=>{const t=e.write({},r);Object.keys(t).length>1&&i.push(t)})),i.length>0&&(t.sublayers=i)}writeUnappliedOverrides(e,t){t.sublayers=[],e.overrides.forEach((e=>{t.sublayers.push((0,n.d9)(e))}))}write(e,t){return e=super.write(e,t),!t||"web-scene"!==t.origin&&"portal-item"!==t.origin||(this.sublayers?this.writeSublayerOverrides(this.sublayers,e,t):this.sublayerOverrides&&this.writeUnappliedOverrides(this.sublayerOverrides,e)),e}read(e,t){if(super.read(e,t),t&&("web-scene"===t.origin||"portal-item"===t.origin)&&null!=e&&Array.isArray(e.sublayers)){const r=this.readSublayerOverrides(e.sublayers,t);this.sublayers?this.applySublayerOverrides(this.sublayers,r):this.sublayerOverrides=r}}readSummaryStatistics(e,t){if("string"==typeof t.statisticsHRef){const e=(0,c.v_)(this.parsedUrl.path,t.statisticsHRef);return new fe({url:e})}return null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}load(e){const t=(0,d.pC)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.r9).then((()=>this._fetchService(t))).then((()=>this._fetchAssociatedFeatureService(t)));return this.addResolvingPromise(r),Promise.resolve(this)}loadAll(){return(0,l.G)(this,(e=>{w.Z.forEachSublayer(this.sublayers,(t=>{"building-group"!==t.type&&e(t)})),this.summaryStatistics&&e(this.summaryStatistics)}))}async saveAs(e,t){return this._debouncedSaveOperations(j.xp.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(j.xp.SAVE,e)}validateLayer(e){if(!e.layerType||"Building"!==e.layerType)throw new a.Z("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}_validateElevationInfo(){const e=this.elevationInfo;e&&("absolute-height"!==e.mode&&ge.warn(".elevationInfo=","Building scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&ge.warn(".elevationInfo=","Building scene layers do not support featureExpressionInfo"))}async _fetchAssociatedFeatureService(e){const t=new ve.W(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedFeatureServiceItem=await t.fetchPortalItem()}catch(M){ge.warn("Associated feature service item could not be loaded",M)}}};(0,i._)([(0,h.Cb)({type:["BuildingSceneLayer"]})],Se.prototype,"operationalLayerType",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],Se.prototype,"allSublayers",void 0),(0,i._)([(0,h.Cb)(we)],Se.prototype,"sublayers",void 0),(0,i._)([(0,f.r)("service","sublayers")],Se.prototype,"readSublayers",null),(0,i._)([(0,h.Cb)({type:be,nonNullable:!0,json:{write:!0}})],Se.prototype,"filters",void 0),(0,i._)([(0,h.Cb)({type:String,json:{write:!0}})],Se.prototype,"activeFilterId",void 0),(0,i._)([(0,h.Cb)({readOnly:!0,type:fe})],Se.prototype,"summaryStatistics",void 0),(0,i._)([(0,f.r)("summaryStatistics",["statisticsHRef"])],Se.prototype,"readSummaryStatistics",null),(0,i._)([(0,h.Cb)({type:[String],json:{read:!1}})],Se.prototype,"outFields",void 0),(0,i._)([(0,h.Cb)(me.vg)],Se.prototype,"fullExtent",void 0),(0,i._)([(0,h.Cb)({type:["show","hide","hide-children"]})],Se.prototype,"listMode",void 0),(0,i._)([(0,h.Cb)((0,me.Lx)(v.Z))],Se.prototype,"spatialReference",void 0),(0,i._)([(0,h.Cb)(me.PV)],Se.prototype,"elevationInfo",null),(0,i._)([(0,h.Cb)({json:{read:!1},readOnly:!0})],Se.prototype,"type",void 0),(0,i._)([(0,h.Cb)()],Se.prototype,"associatedFeatureServiceItem",void 0),Se=(0,i._)([(0,m.j)("esri.layers.BuildingSceneLayer")],Se);const _e=Se},15801:(e,t,r)=>{r.d(t,{Z:()=>m});var i,s=r(27366),o=r(40110),a=r(93002),n=r(51370),l=r(49861),p=(r(63780),r(93169),r(25243),r(69912)),d=r(59147),u=r(58550);const y={type:o.Z,readOnly:!0,json:{origins:{service:{read:{source:"sublayers",reader:c}}},read:!1}};function c(e,t,r){if(e&&Array.isArray(e))return new o.Z(e.map((e=>{const t=function(e){return"group"===e.layerType?h:d.Z}(e);if(t){const i=new t;return i.read(e,r),i}r&&r.messages&&e&&r.messages.push(new n.Z("building-scene-layer:unsupported-sublayer-type","Building scene sublayer of type '"+(e.type||"unknown")+"' are not supported",{definition:e,context:r}))})))}let h=i=class extends u.Z{constructor(e){super(e),this.type="building-group",this.listMode="show",this.sublayers=null}loadAll(){return(0,a.w)(this,(e=>i.forEachSublayer(this.sublayers,(t=>{"building-group"!==t.type&&e(t)}))))}};var f;(0,s._)([(0,l.Cb)({type:["hide","show","hide-children"],json:{write:!0}})],h.prototype,"listMode",void 0),(0,s._)([(0,l.Cb)(y)],h.prototype,"sublayers",void 0),h=i=(0,s._)([(0,p.j)("esri.layers.buildingSublayers.BuildingGroupSublayer")],h),(f=h||(h={})).sublayersProperty=y,f.readSublayers=c,f.forEachSublayer=function e(t,r){t.forEach((t=>{r(t),"building-group"===t.type&&e(t.sublayers,r)}))};const m=h},31614:(e,t,r)=>{r.d(t,{Vt:()=>C,xp:()=>E});var i=r(27366),s=r(76200),o=r(10064),a=(r(93169),r(32718)),n=r(92026),l=r(66978),p=r(35995),d=r(49861),u=(r(63780),r(25243),r(38511)),y=r(69912),c=r(31201),h=r(15909),f=r(53866),m=r(90724),v=r(78952),g=r(25899),b=r(45948),w=r(30494),S=r(70032),_=r(98995),I=r(9634);const x=a.Z.getLogger("esri.layers.mixins.SceneService"),C=e=>{let t=class extends e{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=(0,l.Ds)((async(e,t,r)=>{switch(e){case E.SAVE:return this._save(t);case E.SAVE_AS:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return v.Z.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,i=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=i?new v.Z(i):null}}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e){const i=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return f.Z.fromJSON(i,r)}const i=t.store,s=this._readSpatialReference(t);return null==s||null==i||null==i.extent||!Array.isArray(i.extent)||i.extent.some((e=>e<j))?null:new f.Z({xmin:i.extent[0],ymin:i.extent[1],xmax:i.extent[2],ymax:i.extent[3],spatialReference:s})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t}readVersion(e,t){const r=t.store,i=null!=r.version?r.version.toString():"";return this.parseVersionString(i)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return(0,g.a7)(this.url,t.name);let i=t.name;if(!i&&this.url){const e=(0,g.Qc)(this.url);(0,n.pC)(e)&&(i=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(i=r+" - "+i),(0,g.ld)(i)}set url(e){const t=(0,g.XG)({layer:this,url:e,nonStandardUrlAllowed:!1,logger:x});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,i){(0,g.wH)(this,e,"layers",t,i)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=(0,p.mN)(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=(0,w.T)(this.parsedUrl.path,this.rootNode,e,this.apiKey,x,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===(null==e?void 0:e.type)){var t,r;const i=e.rootIndex%e.pageSize,s=null==(t=e.rootPage)||null==(r=t.nodes)?void 0:r[i];if(null==s||null==s.obb||null==s.obb.center||null==s.obb.halfSize)throw new o.Z("sceneservice:invalid-node-page","Invalid node page.");if(s.obb.center[0]<j||null==this.fullExtent||this.fullExtent.hasZ)return;const a=s.obb.halfSize,n=s.obb.center[2],l=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);this.fullExtent.zmin=n-l,this.fullExtent.zmax=n+l}else if("node"===(null==e?void 0:e.type)){var i;const t=null==(i=e.rootNode)?void 0:i.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<j)return;const r=t[2],s=t[3];this.fullExtent.zmin=r-s,this.fullExtent.zmax=r+s}}async _fetchService(e){if(null==this.url)throw new o.Z("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await(0,s.default)(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await(0,s.default)(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let r=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(r=!0),r)return this._fetchVoxelServiceLayer();const i=t.data;this.read(i,{origin:"service",url:this.parsedUrl}),this.validateLayer(i)}async _fetchVoxelServiceLayer(e){const t=(await(0,s.default)(this.parsedUrl.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,{origin:"service",url:this.parsedUrl}),this.validateLayer(t)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const i=t.getTypeKeywords();for(const s of i)e.typeKeywords.push(s);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===O.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...R,...t};let i=_.default.from(e);i||(x.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new o.Z("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),i.id&&(i=i.clone(),i.id=null);const s=i.portal||S.Z.getDefault();await this._ensureLoadBeforeSave(),i.type=Z,i.portal=s;const a={origin:"portal-item",url:null,messages:[],portal:s,portalItem:i,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write({},a)]};return await Promise.all(a.resources.pendingOperations),await this._validateAgainstJSONSchema(n,a,r),i.url=this.url,i.title||(i.title=this.title),this._updateTypeKeywords(i,r,O.newItem),await s._signIn(),await s.user.addItem({item:i,folder:r&&r.folder,data:n}),await(0,I.H)(this.resourceReferences,a,null),this.portalItem=i,(0,h.D)(a),a.portalItem=i,i}async _save(e){const t={...R,...e};this.portalItem||(x.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new o.Z("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==Z&&(x.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+Z),await Promise.reject(new o.Z("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${Z}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&(0,p.mN)(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||S.Z.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},i={layers:[this.write({},r)]};return await Promise.all(r.resources.pendingOperations),await this._validateAgainstJSONSchema(i,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,O.existingItem),await this.portalItem.update({data:i}),await(0,I.H)(this.resourceReferences,r,null),(0,h.D)(r),this.portalItem}async _validateAgainstJSONSchema(e,t,i){let s=t.messages.filter((e=>"error"===e.type)).map((e=>new o.Z(e.name,e.message,e.details)));if(i&&i.validationOptions.ignoreUnsupported&&(s=s.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),i.validationOptions.enabled||A){const t=(await Promise.all([r.e(8758),r.e(807)]).then(r.bind(r,90807))).validate(e,i.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(x.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===i.validationOptions.failPolicy){const e=t.map((e=>new o.Z("sceneservice:schema-validation",e))).concat(s);throw new o.Z("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(s.length>0)throw new o.Z("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:s})}};return(0,i._)([(0,d.Cb)(b.id)],t.prototype,"id",void 0),(0,i._)([(0,d.Cb)({type:v.Z})],t.prototype,"spatialReference",void 0),(0,i._)([(0,u.r)("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readSpatialReference",null),(0,i._)([(0,d.Cb)({type:f.Z})],t.prototype,"fullExtent",void 0),(0,i._)([(0,u.r)("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readFullExtent",null),(0,i._)([(0,d.Cb)({readOnly:!0,type:m.Z})],t.prototype,"heightModelInfo",void 0),(0,i._)([(0,d.Cb)({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],t.prototype,"minScale",void 0),(0,i._)([(0,d.Cb)({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],t.prototype,"maxScale",void 0),(0,i._)([(0,d.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,i._)([(0,u.r)("version",["store.version"])],t.prototype,"readVersion",null),(0,i._)([(0,d.Cb)({type:String,json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,i._)([(0,d.Cb)({type:String,json:{read:!1}})],t.prototype,"sublayerTitleMode",void 0),(0,i._)([(0,d.Cb)({type:String})],t.prototype,"title",void 0),(0,i._)([(0,u.r)("portal-item","title")],t.prototype,"readTitlePortalItem",null),(0,i._)([(0,u.r)("service","title",["name"])],t.prototype,"readTitleService",null),(0,i._)([(0,d.Cb)({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],t.prototype,"layerId",void 0),(0,i._)([(0,d.Cb)(b.HQ)],t.prototype,"url",null),(0,i._)([(0,c.c)("url")],t.prototype,"writeUrl",null),(0,i._)([(0,d.Cb)()],t.prototype,"parsedUrl",null),(0,i._)([(0,d.Cb)({readOnly:!0})],t.prototype,"store",void 0),(0,i._)([(0,d.Cb)({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],t.prototype,"rootNode",void 0),t=(0,i._)([(0,y.j)("esri.layers.mixins.SceneService")],t),t},j=-1e38,A=!1;var O,T;(T=O||(O={}))[T.existingItem=0]="existingItem",T[T.newItem=1]="newItem";const Z="Scene Service",R={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var E;!function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(E||(E={}))},34785:(e,t,r)=>{r.d(t,{W:()=>d});var i=r(19545),s=r(76200),o=r(92026),a=r(66978),n=r(94990),l=r(70032),p=r(98995);class d{constructor(e,t,r,i){this.parsedUrl=e,this.portalItem=t,this.apiKey=r,this.signal=i,this.rootDocument=null;const s=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);s&&(this.urlParts={root:s[1],layerId:parseInt(s[2],10)})}async fetch(){var e;if(!this.urlParts)return null;const t=null!=(e=this.portalItem)?e:await this._portalItemFromServiceItemId();if((0,o.Wi)(t))return this._loadFromUrl();const r=await this._findAndLoadRelatedPortalItem(t);return(0,o.Wi)(r)?null:this._loadFeatureLayerFromPortalItem(r)}async fetchPortalItem(){var e;if(!this.urlParts)return null;const t=null!=(e=this.portalItem)?e:await this._portalItemFromServiceItemId();return(0,o.Wi)(t)?null:this._findAndLoadRelatedPortalItem(t)}async _fetchRootDocument(){if((0,o.pC)(this.rootDocument))return this.rootDocument;if((0,o.Wi)(this.urlParts))return this.rootDocument={},{};const e={query:{f:"json",token:this.apiKey},responseType:"json",signal:this.signal},t=`${this.urlParts.root}/SceneServer`;try{const r=await(0,s.default)(t,e);this.rootDocument=r.data}catch{this.rootDocument={}}return this.rootDocument}async _fetchServiceOwningPortalUrl(){var e;const t=null==(e=i.id)?void 0:e.findServerInfo(this.parsedUrl.path);if(null!=t&&t.owningSystemUrl)return t.owningSystemUrl;const r=this.parsedUrl.path.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const e=(await(0,s.default)(r,{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(e)return e}catch(o){(0,a.r9)(o)}return null}async _findAndLoadRelatedPortalItem(e){try{return(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find((e=>"Feature Service"===e.type))||null}catch(t){return(0,a.r9)(t),null}}async _loadFeatureLayerFromPortalItem(e){await e.load({signal:this.signal});const t=await this._findMatchingAssociatedSublayerUrl(e.url);return new n.default({url:t,portalItem:e}).load({signal:this.signal})}async _loadFromUrl(){const e=await this._findMatchingAssociatedSublayerUrl(`${this.urlParts.root}/FeatureServer`);return new n.default({url:e}).load({signal:this.signal})}async _findMatchingAssociatedSublayerUrl(e){const t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),r={query:{f:"json"},responseType:"json",authMode:"no-prompt",signal:this.signal},i=this.urlParts.layerId,o=this._fetchRootDocument(),a=(0,s.default)(t,r),[n,l]=await Promise.all([a,o]),p=l&&l.layers,d=n.data&&n.data.layers;if(!Array.isArray(d))throw new Error("expected layers array");if(Array.isArray(p)){for(let s=0;s<Math.min(p.length,d.length);s++)if(p[s].id===i)return`${t}/${d[s].id}`}else if(i<d.length)return`${t}/${d[i].id}`;throw new Error("could not find matching associated sublayer")}async _portalItemFromServiceItemId(){const e=(await this._fetchRootDocument()).serviceItemId;if(!e)return null;const t=new p.default({id:e,apiKey:this.apiKey}),r=await this._fetchServiceOwningPortalUrl();(0,o.pC)(r)&&(t.portal=new l.Z({url:r}));try{return t.load({signal:this.signal})}catch(i){return(0,a.r9)(i),null}}}}}]);
//# sourceMappingURL=9459.1e9837dc.chunk.js.map