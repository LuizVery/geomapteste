(function(){var e={"esri/webscene/validator":1388,"esri/webscene/schema":2012},i=this||window,n=i.webpackJsonp=i.webpackJsonp||[];n.registerAbsMids?n.registerAbsMids(e):(n.absMidsWaiting=n.absMidsWaiting||[]).push(e)})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{1388:function(e,i,n){var t,o;t=[n.dj.c(e.i),i,n(1621),n(1622),n(2012)],void 0===(o=function(e,i,n,t,o){Object.defineProperty(i,"__esModule",{value:!0});var s=new n({allErrors:!0,extendRefs:!0});function a(e){return e?e+"_schema.json":"webScene_schema.json"}s.addSchema(o.json,a()),i.validate=function(e,i){return function(e){var i=a(e);if(!s.getSchema(i)){var n=function(e){var i=o.json.definitions[a(e)];if(!i)throw new Error("invalid schema name to validate against '"+e+"'");var n={};for(var t in i)n[t]=i[t];return n.definitions=o.json.definitions,n}(e);s.addSchema(n,i)}}(i),s.validate(a(i),e)?[]:t.convertAjvErrors(s.errors)}}.apply(null,t))||(e.exports=o)},2012:function(e,i,n){var t,o;t=[n.dj.c(e.i),i,n(1438)],void 0===(o=function(e,i,n){Object.defineProperty(i,"__esModule",{value:!0}),i.json={title:"Webscene",type:"object",description:"The web scene data lists the basemap, operational layers, and presentation slides to be used in the web scene. It also contains information about pop-up windows and layer styling overrides to be used in the web scene. A version property allows you to supply the version of the web scene JSON format being used.",properties:{applicationProperties:{type:"object",$ref:"#/definitions/applicationProperties_schema.json"},authoringApp:{type:"string",description:"String value indicating the application which authored the webmap"},authoringAppVersion:{type:"string",description:"String value indicating the authoring App's version number."},baseMap:{type:"object",description:"Basemaps give the web scene a geographic context.",$ref:"#/definitions/baseMap_schema.json"},clippingArea:{type:"object",$ref:"#/definitions/clippingArea_schema.json"},ground:{type:"object",$ref:"#/definitions/ground_schema.json"},heightModelInfo:{type:"object",$ref:"#/definitions/heightModelInfo_schema.json"},initialState:{type:"object",$ref:"#/definitions/initialState_schema.json"},mapRangeInfo:{type:"object",description:"Map Range Information",$ref:"#/definitions/mapRangeInfo_schema.json"},operationalLayers:{type:"array",description:"Operational layers contain business data which are used to make thematic scenes.",items:{type:"object",$ref:"#/definitions/operationalLayers_schema.json"},uniqueItems:!0},presentation:{type:"object",$ref:"#/definitions/presentation_schema.json"},spatialReference:{type:"object",description:"An object used to specify the spatial reference of the given geometry.",$ref:"#/definitions/spatialReference_schema.json"},tables:{type:"array",description:"An array of table objects.",items:{type:"object",$ref:"#/definitions/table_schema.json"}},transportationNetworks:{type:"array",description:"Used to specify the transportation networks of the scene.",items:{type:"object",$ref:"#/definitions/transportationNetwork_schema.json"}},version:{type:"string",description:"Root element in the web scene specifying a string value indicating the web scene version.",$ref:"#/definitions/version_schema.json"},viewingMode:{type:"string",enum:["global","local"]},widgets:{type:"object",description:"the widgets object contains widgets that should be exposed to the user.",$ref:"#/definitions/widgets_schema.json"}},required:["ground","operationalLayers","spatialReference","version","viewingMode"],additionalProperties:!1,definitions:n.schema_definitions}}.apply(null,t))||(e.exports=o)}}]);